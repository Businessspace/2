<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on Chris Titus Tech | Tech Content Creator</title>
    <link>http://localhost:1313/tags/security/</link>
    <description>Recent content in Security on Chris Titus Tech | Tech Content Creator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The 3 Biggest Security Mistakes Linux Users Make</title>
      <link>http://localhost:1313/linux-security-mistakes/</link>
      <pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/linux-security-mistakes/</guid>
      <description>&lt;p&gt;Security is a journey, not a destination&lt;/p&gt;
&lt;p&gt;So after making a couple videos showing how to increase performance in desktop computers running Linux, I was overwhelmed by the sheer scale of comments worried about mitigations. If you are worried about that, you should be even more worried about the things below.&lt;/p&gt;
&lt;p&gt;Here are the 3 biggest things I see wrong in Linux installs that can easily be exploited or lead to massive problems. I&amp;rsquo;m choosing some of the worst offenders from the basic security layers an attacker goes through.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/linux-security-mistakes/basic-layers.png&#34; alt=&#34;basic-layers&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;network-level---not-using-a-firewall&#34;&gt;Network Level - Not using a Firewall&lt;/h2&gt;
&lt;p&gt;Managing a firewall on a system can be a monumental task, but one of the most important is managing the traffic coming to and from your computer. The best packages for this in Linux is &lt;code&gt;ufw&lt;/code&gt; and &lt;code&gt;fail2ban&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;ufw&#34;&gt;UFW&lt;/h3&gt;
&lt;p&gt;Uncomplicated Firewall is easy to setup and understand. It blocks traffic and allows it.&lt;/p&gt;
&lt;h4 id=&#34;install-ufw&#34;&gt;Install UFW&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install ufw
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;my-recommended-rules&#34;&gt;My recommended Rules&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw limit 22/tcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw allow 80/tcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw allow 443/tcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw default deny incoming
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw default allow outgoing
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw enable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;fail2ban&#34;&gt;Fail2Ban&lt;/h3&gt;
&lt;p&gt;Fail2Ban is one of the best programs that is installed in every single Linux server I have EVER installed. This program is a intrusion prevention utility. Most install it, but forget to configure and use it. These are the settings I like to use.&lt;/p&gt;
&lt;h4 id=&#34;installing-fail2ban&#34;&gt;Installing Fail2Ban&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install fail2ban
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;my-fail2ban-settings-file&#34;&gt;My Fail2Ban Settings File&lt;/h4&gt;
&lt;p&gt;Fail2Ban by default doesn&amp;rsquo;t really do much unless you adjust the settings file. Here is mine, but feel free to change it to your needs.&lt;/p&gt;
&lt;p&gt;All configuration files are in &lt;code&gt;/etc/fail2ban&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Configuration file examples and defaults are in two main files &lt;code&gt;/etc/fail2ban/fail2ban.conf&lt;/code&gt; and &lt;code&gt;/etc/fail2ban/jail.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;My Config - &lt;code&gt;/etc/fail2ban/jail.local&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[DEFAULT]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ignoreip = 127.0.0.1/8 ::1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bantime = 3600
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;findtime = 600
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;maxretry = 5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[sshd]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;enabled = true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now in more complex service environments I would generally start adding services and programs like &lt;code&gt;ssh-jail.conf&lt;/code&gt; to the &lt;code&gt;/etc/fail2ban/jail.d/&lt;/code&gt; directory. Any program that hackers use is typically always under watch, like WordPress installs for example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/fail2ban/jail.d/wordpress.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[wordpress]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;enabled = true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;filter = wordpress
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;logpath = /var/log/auth.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;maxretry = 3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;port = http,https
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bantime = 300
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;enabling-fail2ban&#34;&gt;Enabling Fail2Ban&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl enable fail2ban
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl start fail2ban
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;operating-system-level---adding-repositories&#34;&gt;Operating System Level - Adding Repositories&lt;/h2&gt;
&lt;p&gt;Too many times do I see people installing and using 10+ repositories on a Linux install. Obviously, adding repositories to get the programs you want on your system is something you will do. However, there is a hierarchy to these repositories and if you just blindly trust and import all the keys to the repositories, they can and will override packages from the base distribution. This isn&amp;rsquo;t good and can lead to security issues or even break your system. I&amp;rsquo;d highly recommend putting a priority on these, so it will only use them when the package doesn&amp;rsquo;t exist in that base repo.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t use any priority, often times the package you want from the added repo is installed and updated, but sometimes they add OTHER packages in that repo that will also overwrite existing packages, which can lead to some undesired results.&lt;/p&gt;
&lt;h3 id=&#34;prioritizing-repositories&#34;&gt;Prioritizing Repositories&lt;/h3&gt;
&lt;p&gt;Official documentation for APT (Debian) - &lt;a href=&#34;https://wiki.debian.org/DebianRepository/UseThirdParty&#34;&gt;https://wiki.debian.org/DebianRepository/UseThirdParty&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All priority preference files are stored in the &lt;code&gt;/etc/apt/preferences.d/&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Example: &lt;code&gt;volian.pref&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Package: *
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pin: origin deb.volian.org
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pin-Priority: 100
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Set specific packages to only install with the &lt;code&gt;Package: *&lt;/code&gt; Line&lt;/li&gt;
&lt;li&gt;Pin: Origin is the address of the repo&lt;/li&gt;
&lt;li&gt;Pin-Priority is generally 100 which means it will update packages NOT in base repos.
&lt;ul&gt;
&lt;li&gt;1 = do not auto update&lt;/li&gt;
&lt;li&gt;100 = update if not in other repos&lt;/li&gt;
&lt;li&gt;over 100 = overwrite base repos&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Arch doesn&amp;rsquo;t have any priorities in pacman that I can find, but most are building from source with limited 3rd party repositories. Building from source presents even more dangers for those that are blindly installing programs through the AUR.&lt;/p&gt;
&lt;h2 id=&#34;application-level---not-using-apparmor-or-selinux&#34;&gt;Application Level - Not using AppArmor or SELinux&lt;/h2&gt;
&lt;p&gt;Most Linux distributions have one of these installed by default, but there is one major one that most forget. Arch Linux. A lot of install scripts forget apparmor and SELinux is too complex for many to install. These programs do one massive security feature that many just don&amp;rsquo;t realize. They can sandbox and limit program access even when they get elevated. If an application profile doesn&amp;rsquo;t exist, they typically limit its access to the home folder and limit hardware access. You can customize application profiles to expand or limit access as needed. Without having either of the programs installed, you are putting yourself at risk.&lt;/p&gt;
&lt;p&gt;However, just the simple act of installing these programs often leads to them being used or setup. They typically are set up to be in complain mode for AppArmor or permissive mode for SELinux. While these are fine for logging and adding some security, it normally would NOT stop the program doing damage.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve set these up in server environments and it is not trivial to do or maintain. Most, if not all, Linux desktops don&amp;rsquo;t bother with setting these to enforce mode and blocking programs that don&amp;rsquo;t comply to their application profile. This requires the end user to have knowledge of how to set up profiles and generate them when they are missing, so the programs will work correctly.&lt;/p&gt;
&lt;p&gt;To learn more about using them:
AppArmor Documentation &lt;a href=&#34;https://gitlab.com/apparmor/apparmor/-/wikis/Documentation&#34;&gt;https://gitlab.com/apparmor/apparmor/-/wikis/Documentation&lt;/a&gt;
SELinux Documentation &lt;a href=&#34;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/selinux_users_and_administrators_guide/index&#34;&gt;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/selinux_users_and_administrators_guide/index&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/QxNsyrftJ8I&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>You are NOT safe in Windows</title>
      <link>http://localhost:1313/not-safe-windows/</link>
      <pubDate>Fri, 15 Jul 2022 13:14:39 -0500</pubDate>
      
      <guid>http://localhost:1313/not-safe-windows/</guid>
      <description>&lt;p&gt;Thank you to all the Microsoft Windows users from all the Technicians that work on this operating system. Without your continued use, we wouldn&amp;rsquo;t have jobs.&lt;/p&gt;
&lt;h2 id=&#34;why-is-windows-not-secure&#34;&gt;Why is Windows NOT secure?&lt;/h2&gt;
&lt;p&gt;Legacy systems and a fundamental flaw in system design. It is far to easy to get system level access through a variety of methods. Let&amp;rsquo;s go over the systems that you can use to exploit a traditional Windows user, so you know what NOT to do.&lt;/p&gt;
&lt;h3 id=&#34;powershell&#34;&gt;PowerShell&lt;/h3&gt;
&lt;p&gt;Powershell is one of the most powerful tools in Windows, but it is at a cost. While it makes it incredibly easy to administrator and make modifications to massive amounts of systems quickly, it can be abused. Pretty much anything you want to do can be accomplished with Powershell. This is most evident in business systems where it is required to administer systems and even Office 365 in the cloud.&lt;/p&gt;
&lt;h3 id=&#34;task-scheduler&#34;&gt;Task Scheduler&lt;/h3&gt;
&lt;p&gt;So many processes end up running at a system level in Task scheduler and something the core system relied heavily on. This can not be disabled and is always one of the biggest Achilles heels for Windows. I am often disabling tasks to debloat systems such as auto-submission tools Microsoft uses like Telemetry and even Defender bug reports.&lt;/p&gt;
&lt;h3 id=&#34;visual-basic---vbs-scripts&#34;&gt;Visual Basic - .vbs scripts&lt;/h3&gt;
&lt;p&gt;VBS scripts often provide a level of scripting that isn&amp;rsquo;t possible with many other methods. While this is good in business, it is very bad for the end user. I designed a vbs script to migrate on-premises outlook mailboxes to O365 mailboxes so a thousand users wouldn&amp;rsquo;t have to redownload all their emails. However this can easily be abused for those malicious actors out there. Be cautious of this loophole and any vbs script that runs on your system.&lt;/p&gt;
&lt;h3 id=&#34;group-policy&#34;&gt;Group Policy&lt;/h3&gt;
&lt;p&gt;Again this is used in many pro+ systems and even if you aren&amp;rsquo;t part of a domain can be abused by using &lt;code&gt;gpedit.msc&lt;/code&gt; to create a local policy that can run scripts, lock user features, and much more. Home users typically don&amp;rsquo;t have this functionally unless a hack is done.&lt;/p&gt;
&lt;p&gt;If you want Group Polcy as a home user type the following in an elevated to Administrator prompt:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dism /online /norestart /add-package:&amp;#34;%SystemRoot%servicingPackages{{PackageFileName}}**
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;registry&#34;&gt;Registry&lt;/h3&gt;
&lt;p&gt;So many things can be accomplished with the registry, such as auto login, and various hooks that can happen by just launching your web browser or windows explorer. Registry is basically the brain of windows and can be exploited easily to do pretty much anything.&lt;/p&gt;
&lt;h2 id=&#34;how-to-protect-yourself&#34;&gt;How to protect yourself&lt;/h2&gt;
&lt;p&gt;I highly recommend hardening your system with just basic tools that do NOT run in the background, but disable many of the tools above. These tools are wonderful in the right hands, but world ending the wrong ones.&lt;/p&gt;
&lt;p&gt;A simple free hardening tool on Github will disable many of these attack surfaces and do FAR more than any antivirus or internet security suite can, while also not adding ANY overhead or extra processes to your system.&lt;/p&gt;
&lt;p&gt;HardenTools to disable services: &lt;a href=&#34;https://github.com/securitywithoutborders/hardentools&#34;&gt;https://github.com/securitywithoutborders/hardentools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/hardentools.png&#34; alt=&#34;harden&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Bh8HqxxI4pc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Secure Linux</title>
      <link>http://localhost:1313/secure-linux/</link>
      <pubDate>Tue, 18 Aug 2020 13:02:25 -0500</pubDate>
      
      <guid>http://localhost:1313/secure-linux/</guid>
      <description>&lt;p&gt;This article covers basic security and settings I do with every Linux installation.&lt;/p&gt;
&lt;h2 id=&#34;check-for-drovorub-malware&#34;&gt;Check for Drovorub Malware&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2020/drovorub/drovorub.jpg&#34; alt=&#34;drovorub&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;touch testfile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;echo “ASDFZXCV:hf:testfile” &amp;gt; /dev/zero
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;If the testfile disappears&amp;hellip; you are infected&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;check-for-unsigned-kernel-modules&#34;&gt;Check for unsigned kernel modules&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;for mod in $(lsmod | tail -n +2 | cut -d&amp;#39; &amp;#39; -f1); do modinfo ${mod} | grep -q &amp;#34;signature&amp;#34; || echo &amp;#34;no signature for module: ${mod}&amp;#34; ; done
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;If you see vbox or nvidia modules, these are for VirtualBox and NVidia Drivers respectively&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;secure-boot&#34;&gt;Secure Boot&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2020/drovorub/secure-boot.jpg&#34; alt=&#34;secure-boot&#34;&gt;&lt;/p&gt;
&lt;p&gt;Secure Boot forces checks for kernel module signatures and is good not only for blocking Drovorub-style malware, but also prevents Evil Maid attacks as well. However, it can be complex and also make using bootable USB drives difficult. &lt;em&gt;Note: UEFI Boot Required&amp;hellip; No Legacy/CSM.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;easy-way-to-install&#34;&gt;Easy Way to Install&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mokutil --enable-validation # Remember the password!
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mokutil --sb-state # Checks if Secure Boot is enabled
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;*Note: I used the enable validation on Debian based systems and it worked right out of the box&lt;/p&gt;
&lt;h3 id=&#34;hard-way-to-install&#34;&gt;Hard Way to Install&lt;/h3&gt;
&lt;p&gt;Hard way involves signing packages that aren&amp;rsquo;t stock which you might need on your system or if you dual boot. Check out the following guide from the ArchWiki: &lt;a href=&#34;https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface/Secure_Boot&#34;&gt;https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface/Secure_Boot&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;security-settings-for-all-linux-installs&#34;&gt;Security Settings for All Linux Installs&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/github.png&#34; alt=&#34;github&#34;&gt;&lt;/p&gt;
&lt;p&gt;I created a github script to make this easier but I wanted to break down what this script does. Secure-Linux Project &lt;a href=&#34;https://github.com/ChrisTitusTech/secure-linux/blob/master/secure.sh&#34;&gt;https://github.com/ChrisTitusTech/secure-linux/blob/master/secure.sh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Before running this script install ufw and fail2ban packages&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This script is broken into 3 parts: ufw, sysctl.conf modifications, and fail2ban. Ufw stands for Uncomplicated Firewall and is fantastic for adding to every install. This script opens http and https, while limiting SSH to only a couple connections per second. The sysctl modifications helps harden your system by preventing spoofing and man in the middle attacks. Fail2ban is the final piece and possibly my favorite. This package see any traffic that is failing authentication attempts repeatedly or is malicious in nature (DDoS) and records the IP then blocks it for a period of time.&lt;/p&gt;
&lt;p&gt;Other things I&amp;rsquo;d recommend not mentioned&amp;hellip; SELinux! Look it up because it is amazing. You can also use this on debian if you&amp;rsquo;d like, but a smaller package called AppArmor is generally used on those types of distributions.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This is not a all inclusive guide on securing your Linux system, but it is a good starting point that I do on pretty much every computer. I highly recommend you take these instructions and expand them to suit your needs.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
