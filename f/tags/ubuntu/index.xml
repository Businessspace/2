<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ubuntu on Chris Titus Tech | Tech Content Creator</title>
    <link>http://localhost:1313/tags/ubuntu/</link>
    <description>Recent content in Ubuntu on Chris Titus Tech | Tech Content Creator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Macos</title>
      <link>http://localhost:1313/docker-macos/</link>
      <pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docker-macos/</guid>
      <description>&lt;p&gt;Don&amp;rsquo;t have a Mac and need MacOS? No problem, run it in a docker container.&lt;/p&gt;
&lt;p&gt;Credit goes to this twitter user:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Anthony &lt;a href=&#34;https://twitter.com/LinusTech?ref_src=twsrc%5Etfw&#34;&gt;@LinusTech&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/christitustech?ref_src=twsrc%5Etfw&#34;&gt;@christitustech&lt;/a&gt; need to check out this project:&lt;a href=&#34;https://t.co/ctx41h0j25&#34;&gt;https://t.co/ctx41h0j25&lt;/a&gt;&lt;br&gt;&lt;br&gt;It offers macOS Catalina, Big Sur, Monterey, High Sierra, and Mojave as Docker images.&lt;br&gt;&lt;br&gt;PS:&lt;br&gt;Someone please tell me what&amp;#39;s Anthony&amp;#39;s twitter handle. I need to follow that man.&lt;/p&gt;&amp;mdash; Arinze (@justArRinze) &lt;a href=&#34;https://twitter.com/justArRinze/status/1591779981390413826?ref_src=twsrc%5Etfw&#34;&gt;November 13, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Install Docker Ubuntu 22.04&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo add-apt-repository &amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install docker-ce -y
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo usermod -aG docker $USER
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Reboot or logout/login&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(Optional) GUI Webpage for Managing Docker - Portainer&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker volume create portainer_data
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -d -p 8000:8000 -p 9443:9443 --name portainer \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--restart=always \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-v /var/run/docker.sock:/var/run/docker.sock \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-v portainer_data:/data \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;portainer/portainer-ce:2.9.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Open up browser and navigate to &lt;a href=&#34;https://localhost:9443&#34;&gt;https://localhost:9443&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Click Advanced and proceed with any certificate errors&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;macos-docker-setup&#34;&gt;MacOS Docker Setup&lt;/h2&gt;
&lt;p&gt;Setup the MacOS Docker Container with the following docker command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -it \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --device /dev/kvm \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -p 50922:10022 \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -v /tmp/.X11-unix:/tmp/.X11-unix \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -e &amp;#34;DISPLAY=${DISPLAY:-:0.0}&amp;#34; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -e GENERATE_UNIQUE=true \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -e MASTER_PLIST_URL=&amp;#39;https://raw.githubusercontent.com/sickcodes/osx-serial-generator/master/config-custom.plist&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    sickcodes/docker-osx:monterey
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# docker build -t docker-osx --build-arg SHORTNAME=monterey .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use Disk Utility to &amp;ldquo;erase&amp;rdquo; the 270GB virtual disk: &lt;em&gt;Note: This is just virtual and doesn&amp;rsquo;t erase your drive&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/docker-macos/disk-util.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;start-macos-docker-container&#34;&gt;Start MacOS Docker Container&lt;/h2&gt;
&lt;p&gt;Before we start the container find the name with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker ps -a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Look for the NAMES column and pick the container name.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/docker-macos/container.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Start with the following command NAME = Name from column above&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker start NAME
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;portainer-method-for-starting&#34;&gt;Portainer Method for Starting&lt;/h3&gt;
&lt;p&gt;I love portainer because you can easily manage your containers. Start, Stop, and see resource usage&amp;hellip; Portainer does it all! Here is what mine looks like:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/docker-macos/portainer.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;optimize-the-container&#34;&gt;Optimize the Container&lt;/h2&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://github.com/sickcodes/osx-optimizer&#34;&gt;https://github.com/sickcodes/osx-optimizer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Run the following from Root Prompt # &lt;code&gt;sudo su&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.loginwindow autoLoginUser -bool true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mdutil -i off -a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nvram boot-args=&amp;#34;serverperfmode=1 $(nvram boot-args 2&amp;gt;/dev/null | cut -f 2-)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write /Library/Preferences/com.apple.loginwindow DesktopPicture &amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.Accessibility DifferentiateWithoutColor -int 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.Accessibility ReduceMotionEnabled -int 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.universalaccess reduceMotion -int 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.universalaccess reduceTransparency -int 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.Accessibility ReduceMotionEnabled -int 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticDownload -bool false
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool false
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.commerce AutoUpdate -bool false
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.commerce AutoUpdateRestartRequired -bool false
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.SoftwareUpdate AutomaticDownload -int 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.loginwindow DisableScreenLock -bool true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;defaults write com.apple.loginwindow TALLogoutSavesState -bool false
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;final-result&#34;&gt;Final Result&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/docker-macos/macos-final.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/XWo2gnNbeGQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Switching to Ubuntu</title>
      <link>http://localhost:1313/switching-to-ubuntu/</link>
      <pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/switching-to-ubuntu/</guid>
      <description>&lt;p&gt;Yes, the title is correct, I&amp;rsquo;m switching to Ubuntu. Don&amp;rsquo;t you hate snaps and GNOME? Yes, but I always say change your Linux install to what you want. Don&amp;rsquo;t like something? Change IT!&lt;/p&gt;
&lt;p&gt;But Why? &amp;hellip; Ubuntu does something right!?&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Interesting Discovery:&lt;br&gt;Debian Server on Laptop 14W&lt;br&gt;Ubuntu Server on Laptop 8W&lt;br&gt;Both minimal and stripped. No custom modifications.&lt;/p&gt;&amp;mdash; Chris Titus Tech (@christitustech) &lt;a href=&#34;https://twitter.com/christitustech/status/1591540430226628608?ref_src=twsrc%5Etfw&#34;&gt;November 12, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;starting-with-server&#34;&gt;Starting with Server&lt;/h2&gt;
&lt;p&gt;I start with Ubuntu server download &lt;a href=&#34;https://ubuntu.com/download/server&#34;&gt;https://ubuntu.com/download/server&lt;/a&gt; and then strip out SNAPD before adding any desktop environment. This makes it so I can avoid all the things I don&amp;rsquo;t like about Ubuntu, while getting the benefits of their Kernel optimizations and packaging.&lt;/p&gt;
&lt;p&gt;Will Ubuntu always be better than Debian for kernel and packaging? No, in fact, Debian is adding non-free firmware packages into their base installer and will no longer be second class citizen on new installs and you won&amp;rsquo;t need to go hunting for a non-free ISO any longer.&lt;/p&gt;
&lt;h3 id=&#34;removing-snapcraft-or-snaps&#34;&gt;Removing Snapcraft or Snaps&lt;/h3&gt;
&lt;p&gt;Run the following commands to remove snapd and also hold the package to prevent it from reinstalling.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt purge snapd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-mark hold snapd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;avoiding-certain-packages&#34;&gt;Avoiding certain packages&lt;/h3&gt;
&lt;p&gt;The downside to the following approach is Ubuntu has packages, such as: Firefox and others that will try to install the snap version.&lt;/p&gt;
&lt;p&gt;I highly recommend installing NIX OS env to get around this limitation, as this is what I do with every install on every distribution anyways.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -L https://nixos.org/nix/install | sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;For a reference guide check out my Nix Package Manager article: &lt;a href=&#34;https://christitus.com/nix-package-manager/&#34;&gt;https://christitus.com/nix-package-manager/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;installing-your-desktop&#34;&gt;Installing Your Desktop&lt;/h2&gt;
&lt;p&gt;The easiest method for installing your desktop is using &lt;code&gt;tasksel&lt;/code&gt; from the terminal.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install tasksel -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run it with &lt;code&gt;sudo tasksel&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/switching-to-ubuntu/tasksel.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Select the Debian Desktop Environment at top and the desktop environment that you want to use.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: While this method is easy, it will install some bloat that you may wish to remove.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;advanced-option&#34;&gt;Advanced Option&lt;/h3&gt;
&lt;p&gt;Using my window manager set up, which requires manual intervention from &lt;a href=&#34;https://github.com/christitustech/ubuntu-titus/&#34;&gt;https://github.com/christitustech/ubuntu-titus/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Final Result:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/switching-to-ubuntu/ubuntu-titus.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/UvSLMzkog1g&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>5 Essential Terminal Utilities</title>
      <link>http://localhost:1313/5-terminal-commands/</link>
      <pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/5-terminal-commands/</guid>
      <description>&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/5-terminal-commands/tldr.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Too long didn&amp;rsquo;t read? The perfect solution for long man pages that we just want some quick examples and basic syntax for a command. TLDR is a vital tool to save you time when learning the terminal.&lt;/p&gt;
&lt;h2 id=&#34;cmatrix&#34;&gt;CMatrix&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/5-terminal-commands/cmatrix.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;How can you use Linux without using CMatrix&amp;hellip; It&amp;rsquo;s hard to be cool without it.&lt;/p&gt;
&lt;h2 id=&#34;trash-cli&#34;&gt;Trash-CLI&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/5-terminal-commands/trash-cli.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is a life saver after you delete a directory or files in terminal and need to get them back. I highly recommend making the following alias in your &lt;code&gt;~/.bashrc&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alias rm=&amp;#39;trash -v&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Delete a file and send it to the trash:
&lt;code&gt;trash path/to/file&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List all files in the trash:
&lt;code&gt;trash-list&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interactively restore a file from the trash:
&lt;code&gt;trash-restore&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Empty the trash:
&lt;code&gt;trash-empty&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Permanently delete all files in the trash which are older than 10 days:
&lt;code&gt;trash-empty 10&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove all files in the trash, which match a specific blob pattern:
&lt;code&gt;trash-rm &amp;quot;*.o&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove all files with a specific original location:
&lt;code&gt;trash-rm /path/to/file_or_directory&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;autojump&#34;&gt;Autojump&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/5-terminal-commands/autojump.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is my most used terminal utility that saves me the most amount of time. The catch to this program is you must have navigated to the directory at least once in terminal first.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jump to a directory that contains the given pattern:
&lt;code&gt;j pattern&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jump to a sub-directory (child) of the current directory that contains the given pattern:
&lt;code&gt;jc pattern&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open a directory that contains the given pattern in the operating system file manager:
&lt;code&gt;jo pattern&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove non-existing directories from the autojump database:
&lt;code&gt;j --purge&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show the entries in the autojump database:
&lt;code&gt;j -s&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;progress&#34;&gt;Progress&lt;/h2&gt;
&lt;p&gt;Tired of wondering how much longer the cp, mv, dd, tar, cat, and other Linux coreutil functions take? Progress will tell you!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Show the progress of running coreutils:
&lt;code&gt;progress&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Launch and monitor a single long-running command:
&lt;code&gt;command &amp;amp; progress --monitor --pid $!&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Include an estimate of time remaining for completion:
&lt;code&gt;progress --wait --command rsync&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/HKB8RUWZIQA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Ubuntus ARM Is Good</title>
      <link>http://localhost:1313/ubuntus-arm-is-good/</link>
      <pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/ubuntus-arm-is-good/</guid>
      <description>&lt;p&gt;ARM Computing has gone mainstream with Raspberry Pi and Mac M1/M2 chips. Harnessing this in a Linux desktop can be interesting. This is where I started using Ubuntu again.&lt;/p&gt;
&lt;p&gt;Ubuntu&amp;rsquo;s ARM spin is fantastic at a server level. The main issue I&amp;rsquo;ve had with Ubuntu desktops in the past are it reliance on GNOME&amp;rsquo;s desktop environment and SNAP packages. Both these issues get alleviated when we get in to the server realm. My new PC that I&amp;rsquo;m building on arm using the OrangePi 800 hardware is fantastic with the right software installed on it. That is where Ubuntu ARM enters&amp;hellip;&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Ubuntu has a GOOD ARM server spin. I&amp;#39;m going to roll with it, It is a great balance of up to date and reliable, which is hard to find in the ARM space on Linux.&lt;/p&gt;&amp;mdash; Chris Titus Tech (@christitustech) &lt;a href=&#34;https://twitter.com/christitustech/status/1587141986942861315?ref_src=twsrc%5Etfw&#34;&gt;October 31, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;the-setup&#34;&gt;The Setup&lt;/h2&gt;
&lt;p&gt;Download the latest ARM package from &lt;a href=&#34;https://ubuntu.com/download/server/arm&#34;&gt;https://ubuntu.com/download/server/arm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After the setup process I did the following tweaks to fix Ubuntu&amp;rsquo;s base to my liking:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disable Snaps&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;snap list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo snap remove programs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Purge snap daemon and prevent reinstall&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt purge snapd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-mark hold snapd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Verify the Uninstall&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt list --install | grep snap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;desktop-environment&#34;&gt;Desktop Environment&lt;/h3&gt;
&lt;p&gt;The easiest way to set up the system for desktop usage is to use &lt;code&gt;tasksel&lt;/code&gt; and then pick the desktop environment that you like the best.&lt;/p&gt;
&lt;p&gt;My recommendations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows Users - KDE&lt;/li&gt;
&lt;li&gt;MacOS users - GNOME&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This will give you the base install for your ARM system.&lt;/p&gt;
&lt;h2 id=&#34;why-ubuntu&#34;&gt;Why Ubuntu?&lt;/h2&gt;
&lt;p&gt;I haven&amp;rsquo;t talked well about Ubuntu in the past because of their position on Snaps and switching to GNOME as their desktop environment. The reason I am choosing Ubuntu ARM is because it fit best for my use case. I needed up-to-date packages and reliability in the ARM space. I&amp;rsquo;d use Debian testing or sid for this task, but their ARM spins were not reliable on these branches from my testing. There were display issues and compatibility from missing firmware and non-free. To fix this, I download the non-free firmware ISO, but for ARM these are hard to find. Even after upgrading Debian stable to testing or sid, the ARM servers had experimental packages that didn&amp;rsquo;t work with the hardware I was using. I had none of these issues from Ubuntu&amp;rsquo;s ARM distribution.&lt;/p&gt;
&lt;p&gt;For the bleeding edge, there is no better distribution than Arch and there ARM branch is one of the best out there. Arch Linux is unstable at it&amp;rsquo;s core and not suitable for a device that I might only use once a week or month. This could be remedied by making it immutable, but having to mess with images is not fun or practical as a single maintainer.&lt;/p&gt;
&lt;p&gt;That left me with raspbian or armbian, but both these distributions are downstream from Ubuntu and Debian. This means the packages are stable, but old and I need new packages if I want to use it as a desktop replacement. That left me with one logical choice&amp;hellip; Ubuntu.&lt;/p&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/mxRVwF2YG3Q&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Macos on Linux</title>
      <link>http://localhost:1313/macos-on-linux/</link>
      <pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/macos-on-linux/</guid>
      <description>&lt;p&gt;This shows you all the steps to install a MacOS VM in Linux QEMU using Virtual Machine Manager or virt-manager.&lt;/p&gt;
&lt;p&gt;Newer Source, but not as polished: &lt;a href=&#34;https://github.com/kholia/OSX-KVM&#34;&gt;https://github.com/kholia/OSX-KVM&lt;/a&gt;
Mac KVM Repository: &lt;a href=&#34;https://github.com/foxlet/macOS-Simple-KVM&#34;&gt;https://github.com/foxlet/macOS-Simple-KVM&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A modern Linux distribution. E.g. Ubuntu 20.04 LTS 64-bit or later.&lt;/li&gt;
&lt;li&gt;QEMU &amp;gt;= 4.2.0&lt;/li&gt;
&lt;li&gt;A CPU with Intel VT-x / AMD SVM support is required (&lt;code&gt;grep -e vmx -e svm /proc/cpuinfo&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation-preparation&#34;&gt;Installation Preparation&lt;/h2&gt;
&lt;p&gt;Install QEMU and modify your user using &lt;a href=&#34;https://christitus.com/vm-setup-in-linux&#34;&gt;https://christitus.com/vm-setup-in-linux&lt;/a&gt; Guide.&lt;/p&gt;
&lt;p&gt;Clone this repository on your QEMU system. Files from this repository are used in the following steps.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd ~
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone --depth 1 --recursive https://github.com/foxlet/macOS-Simple-KVM
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd macOS-Simple-KVM
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;installation-media&#34;&gt;Installation Media&lt;/h2&gt;
&lt;p&gt;This downloads our installation media and I&amp;rsquo;d recommend using Catalina for compatibility and performance.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./jumpstart.sh --catalina
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: Modern NVIDIA GPUs are supported on HighSierra but not on later
versions of macOS. Recommended PCI Passthrough GPU is 5700XT as this works on Catalina and above. If you go with a 6000 Series Card only certain ones will work on Big Sur and Monterey, but not earlier releases.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;virtual-machine-setup&#34;&gt;Virtual Machine Setup&lt;/h2&gt;
&lt;p&gt;I recommend using Virtual Machine Manager (virt-manager) as it has a fantastic interface and Simple-KVM does a great job with their setup script. Simply type the following to get the macOS VM setup:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ./make.sh --add
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vm-modification&#34;&gt;VM Modification&lt;/h3&gt;
&lt;p&gt;Before we can start out VM we have to have a hard drive to load it. You have two options: physical hard drive passthrough or qcow2 file.&lt;/p&gt;
&lt;p&gt;Obviously, the physical drive is considerably faster, but not possible in some instances such as laptops or if you can&amp;rsquo;t afford a secondary drive.&lt;/p&gt;
&lt;h4 id=&#34;physical-hard-drive-passthrough&#34;&gt;Physical Hard Drive Passthrough&lt;/h4&gt;
&lt;p&gt;This is pretty simple as you just click Add Hardware -&amp;gt; Storage and then specify your hard drive.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/qemu/hdd.png&#34; alt=&#34;hdd&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: while you can use drive short names &lt;code&gt;/dev/sda&lt;/code&gt; I&amp;rsquo;d recommend using &lt;code&gt;/dev/disk/by-id/HARDDRIVESERIAL&lt;/code&gt; as this doesn&amp;rsquo;t ever change.&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;qcow2-file-for-hard-drive&#34;&gt;QCOW2 File for Hard Drive&lt;/h4&gt;
&lt;p&gt;This is even simpler as you just click Add Hardware -&amp;gt; Storage and create new file. Just make sure you put it on at least a SSD or a nvme drive as it will be super slow if you don&amp;rsquo;t.&lt;/p&gt;
&lt;h2 id=&#34;install-process&#34;&gt;Install Process&lt;/h2&gt;
&lt;p&gt;Boot your machine and select the OS Install Partition on startup.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;Disk Utility&lt;/code&gt; tool within the macOS installer to partition, and
format the virtual disk attached to the macOS VM.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TIP: Using a non-APFS filesystem is recommended.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Go ahead, and install macOS&lt;/p&gt;
&lt;h3 id=&#34;post-installation&#34;&gt;Post-Installation&lt;/h3&gt;
&lt;h4 id=&#34;bridge-networking&#34;&gt;Bridge Networking&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;First&lt;/em&gt; find your card interface name&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Example: (Interface name is enp7s0)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    inet 127.0.0.1/8 scope host lo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       valid_lft forever preferred_lft forever
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    inet6 ::1/128 scope host 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       valid_lft forever preferred_lft forever
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2: enp7s0: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu 1500 qdisc fq_codel state DOWN group default qlen 1000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    link/ether 24:bb:ee:55:22:33 brd ff:ff:ff:ff:ff:ff
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    inet 10.0.0.99/24 brd 10.0.0.255 scope global
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    valid_lft forever preferred_lft forever
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    inet6 ::1/128 scope host 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    valid_lft forever preferred_lft forever
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Second&lt;/em&gt; Update &lt;code&gt;/etc/network/interfaces&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;source /etc/network/interfaces.d/*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# The loopback network interface
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;auto lo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iface lo inet loopback
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# The primary network interface - old entry
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# allow-hotplug enp7s0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# iface enp7s0 inet dhcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# The primary network interface - new entry
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# DEVICENAME = enp7so for this pc and MYUSERNAME need to be $(whoami)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;auto br0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iface br0 inet dhcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  bridge_ports DEVICENAME tap0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;auto tap0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iface tap0 inet dhcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pre-up tunctl -u MYUSERNAME -t tap0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Lastly&lt;/em&gt; Restart the networking service or reboot computer. Then change your VM NIC (Network Hardware) to &lt;code&gt;br0&lt;/code&gt; interface.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl restart networking
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;other-considerations&#34;&gt;Other Considerations&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;GPU Passthrough (Requires two Graphics Cards) - &lt;a href=&#34;https://github.com/foxlet/macOS-Simple-KVM/blob/master/docs/guide-passthrough.md&#34;&gt;https://github.com/foxlet/macOS-Simple-KVM/blob/master/docs/guide-passthrough.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Changing Screen Resolution - &lt;a href=&#34;https://github.com/foxlet/macOS-Simple-KVM/blob/master/docs/guide-screen-resolution.md&#34;&gt;https://github.com/foxlet/macOS-Simple-KVM/blob/master/docs/guide-screen-resolution.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optimizing System Performance - &lt;a href=&#34;https://github.com/sickcodes/osx-optimizer&#34;&gt;https://github.com/sickcodes/osx-optimizer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sound - Two methods, Pass the audio through HDMI if using GPU Passthrough OR Pass through a USB sound card that is macOS compatible
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note: There is a way to use Voodoo kext or AppleALC, but it will crackle and sound terrible&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/dMLNP6FfhkI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Fix LibGL Errors</title>
      <link>http://localhost:1313/fix-libGL-errors/</link>
      <pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fix-libGL-errors/</guid>
      <description>&lt;p&gt;I recently had a debian install where Steam would not launch. Here is how I fixed it when it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: This is for nVidia based GPU systems&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;error-screen&#34;&gt;Error Screen&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/fix-libGL-error.jpg&#34; alt=&#34;libGL-error&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;You are missing the following 32-bit libraries, and Steam may not run: libGL.so.1&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;packages-required&#34;&gt;Packages Required&lt;/h2&gt;
&lt;p&gt;These packages are missing and will fix the above error.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dpkg --add-architecture i386
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install libgl1-mesa-dri:i386 libgl1:i386
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get upgrade steam -f
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install nvidia-driver-libs:i386
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;launch-steam&#34;&gt;Launch Steam&lt;/h2&gt;
&lt;p&gt;You now can launch steam and have it launch properly.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Best Package Manager</title>
      <link>http://localhost:1313/best-package-manager/</link>
      <pubDate>Mon, 08 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/best-package-manager/</guid>
      <description>&lt;p&gt;Instead of using the built-in package manager in Linux or some container that never puts the programs files in a usable spot, we will use Homebrew!&lt;/p&gt;
&lt;p&gt;I know, it&amp;rsquo;s an OS X package manager, but it works fantastic on Linux and solves MANY problems.&lt;/p&gt;
&lt;p&gt;Main issues it addresses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Older packages from stable Linux distributions&lt;/li&gt;
&lt;li&gt;Putting the installed packages in easy spots to reference them and modify them when needed.&lt;/li&gt;
&lt;li&gt;Using sudo can be dangerous and brew installs it to a home directory instead of systemwide without needing sudo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A good example of this. On Debian and Fedora the package HUGO is old&amp;hellip; like really old. Anywhere between version .60 and .90 where home brew installs version .101-extended&lt;/p&gt;
&lt;h2 id=&#34;installing-homebrew&#34;&gt;Installing Homebrew&lt;/h2&gt;
&lt;h3 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Debian or Ubuntu&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install build-essential procps curl file git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Fedora, CentOS, or Red Hat&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo yum groupinstall &amp;#39;Development Tools&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo yum install procps-ng curl file git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo yum install libxcrypt-compat # needed by Fedora 30 and up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;install-script&#34;&gt;Install Script&lt;/h3&gt;
&lt;p&gt;One command to install it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;make-brew-available-in-terminal&#34;&gt;Make brew available in terminal&lt;/h3&gt;
&lt;p&gt;By default homebrew puts itself in an easy to access directory. &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; but there are a variety methods to use it from your prompt.&lt;/p&gt;
&lt;h4 id=&#34;official-method&#34;&gt;Official Method&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test -d ~/.linuxbrew &amp;amp;&amp;amp; eval &amp;#34;$(~/.linuxbrew/bin/brew shellenv)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test -d /home/linuxbrew/.linuxbrew &amp;amp;&amp;amp; eval &amp;#34;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test -r ~/.bash_profile &amp;amp;&amp;amp; echo &amp;#34;eval \&amp;#34;\$($(brew --prefix)/bin/brew shellenv)\&amp;#34;&amp;#34; &amp;gt;&amp;gt; ~/.bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;echo &amp;#34;eval \&amp;#34;\$($(brew --prefix)/bin/brew shellenv)\&amp;#34;&amp;#34; &amp;gt;&amp;gt; ~/.profile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;the-bashrc-method&#34;&gt;The .bashrc Method&lt;/h4&gt;
&lt;p&gt;Add the following line to &lt;code&gt;~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;eval &amp;#34;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: if you use ZSH then the file you need to edit is &lt;code&gt;~/.zshrc&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;using-homebrew&#34;&gt;Using Homebrew&lt;/h2&gt;
&lt;p&gt;With homebrew setup here are the commands I use almost daily&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;brew install programname&lt;/code&gt; - Install programname using brew&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew search programname&lt;/code&gt; - Search for programname in brew&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew uninstall programname&lt;/code&gt; - Uninstall program&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew update&lt;/code&gt; - Updates brew&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew upgrade program&lt;/code&gt; - Updates just that one program&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew list&lt;/code&gt; - List programs in brew&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Get Lost? &lt;code&gt;man brew&lt;/code&gt; to look at all documentation in terminal or don&amp;rsquo;t know what a program does? &lt;code&gt;brew info programname&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s it for the daily syntax&lt;/p&gt;
&lt;h2 id=&#34;understanding-homebrew-terms&#34;&gt;Understanding Homebrew terms&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;keg - Program binaries created from source&lt;/li&gt;
&lt;li&gt;bottle - Program binaries downloaded&lt;/li&gt;
&lt;li&gt;cellar - Directory where kegs / binaries are stored&lt;/li&gt;
&lt;li&gt;tap - git repository&lt;/li&gt;
&lt;li&gt;cask - mac os native binary (not used in Linux)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is other stuff to homebrew but read the full documentation if interested here &lt;a href=&#34;https://docs.brew.sh/Formula-Cookbook#homebrew-terminology&#34;&gt;https://docs.brew.sh/Formula-Cookbook#homebrew-terminology&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Basics of homebrew on Linux official documentation &lt;a href=&#34;https://docs.brew.sh/Homebrew-on-Linux&#34;&gt;https://docs.brew.sh/Homebrew-on-Linux&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/QsYEvnV-P34&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;thank-you-homebrew-team&#34;&gt;Thank you Homebrew Team&lt;/h2&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Thanks &lt;a href=&#34;https://twitter.com/MacHomebrew?ref_src=twsrc%5Etfw&#34;&gt;@MacHomebrew&lt;/a&gt; for making an amazing product and also letting us Linux users in on the fun!&lt;/p&gt;&amp;mdash; Chris Titus Tech (@christitustech) &lt;a href=&#34;https://twitter.com/christitustech/status/1554153066823385089?ref_src=twsrc%5Etfw&#34;&gt;August 1, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Speedup Linux</title>
      <link>http://localhost:1313/speedup-linux/</link>
      <pubDate>Sun, 24 Jul 2022 10:30:53 -0500</pubDate>
      
      <guid>http://localhost:1313/speedup-linux/</guid>
      <description>&lt;p&gt;Linux by default is meant for servers and actually decreases the performance for greater security. While this great in business, when using Linux as a desktop it is not ideal unless your are serving other devices on your network with that machine.&lt;/p&gt;
&lt;h2 id=&#34;disable-mitigations&#34;&gt;Disable Mitigations&lt;/h2&gt;
&lt;p&gt;This will have a substantial increase in performance just by doing disable many mitigations that happen in multi-threaded systems. The more core count you have the greater the performance gain. Some performances increases can be as large as 30%, but the average increase is about 10%.&lt;/p&gt;
&lt;p&gt;Add this to your &lt;code&gt;/etc/default/grub&lt;/code&gt; under line &lt;code&gt;GRUB_CMDLINE_LINUX=&amp;quot;rhgb quiet&amp;quot;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GRUB_CMDLINE_LINUX=&amp;#34;rhgb quiet mitigations=off&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;zswap-for-16gb-or-less-systems&#34;&gt;ZSwap for 16GB or Less Systems&lt;/h2&gt;
&lt;p&gt;Z Swap is the a neat Linux feature that compresses data that is about to enter your swap file. This causes it to be used quite a bit less and can give a performance uplift to those with a small amount of memory. If you have a system with 32GB or greater, I wouldn&amp;rsquo;t recommend doing this.&lt;/p&gt;
&lt;p&gt;Add this to your &lt;code&gt;/etc/default/grub&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GRUB_CMDLINE_LINUX=&amp;#34;zswap.enabled=1 rhgb quiet mitigations=off&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;systems-older-than-linux-511&#34;&gt;Systems older than Linux 5.11&lt;/h2&gt;
&lt;p&gt;There is a cool website called &lt;a href=&#34;https://make-linux-fast-again.com/&#34;&gt;https://make-linux-fast-again.com/&lt;/a&gt; that has a massive amount of the flags including the ones used above. However, this is mainly for older Linux installs and why I really don&amp;rsquo;t use it. These are all the flags that website recommends:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;noibrs noibpb nopti nospectre_v2 nospectre_v1 l1tf=off nospec_store_bypass_disable no_stf_barrier mds=off tsx=on tsx_async_abort=off mitigations=off
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;is-this-really-needed&#34;&gt;Is this really needed?&lt;/h2&gt;
&lt;p&gt;While all this above isn&amp;rsquo;t really needed, it is a really neat way to squeeze a bit performance out of your systems. It is ONLY recommended for those not sharing services and files through your network. It is also NOT recommended for those using Linux in a virtual machine as many of the mitigations are for VM protection. So use this RESPONSIBLY and don&amp;rsquo;t just slap it on every Linux install.&lt;/p&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/8XueTkMTNvc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Star Trek Window Management</title>
      <link>http://localhost:1313/star-trek-os/</link>
      <pubDate>Thu, 21 Jul 2022 12:07:52 -0500</pubDate>
      
      <guid>http://localhost:1313/star-trek-os/</guid>
      <description>&lt;p&gt;The LCARS system from Star Trek is a staple in the geek world. Ever since it made its first appearence in the Next Generation TV series in the 90s people have been obsessed with recreating that system. Leave it to Linux to give a functional LCARS recreation for those Star Trek fans out there.&lt;/p&gt;
&lt;h2 id=&#34;the-lcars-desktop-environment&#34;&gt;The LCARS Desktop Environment&lt;/h2&gt;
&lt;p&gt;This was created and hosted on &lt;a href=&#34;https://lcarsde.github.io/index.html&#34;&gt;https://lcarsde.github.io/index.html&lt;/a&gt;. The creator made 5 packages that you need to install before you can use it. The entire environment isn&amp;rsquo;t all that practical unless you have a massive monitor because of all the screen real estate lost to the LCARS design. This isn&amp;rsquo;t very up to date so I recommend using debian version 10 (buster) for maximum compatibility. Newer version of Debian have issues with the &lt;code&gt;python3-posix-ipc&lt;/code&gt; dependancy.&lt;/p&gt;
&lt;p&gt;Download base Debian 10 (buster) distro @ &lt;a href=&#34;https://cdimage.debian.org/cdimage/unofficial/non-free/cd-including-firmware/archive/10.12.0+nonfree/amd64/iso-cd/firmware-10.12.0-amd64-netinst.iso&#34;&gt;https://cdimage.debian.org/cdimage/unofficial/non-free/cd-including-firmware/archive/10.12.0+nonfree/amd64/iso-cd/firmware-10.12.0-amd64-netinst.iso&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Install nothing but base system. No GUI components to keep it light.&lt;/p&gt;
&lt;h3 id=&#34;install-dependancies&#34;&gt;Install Dependancies&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Xorg&lt;/li&gt;
&lt;li&gt;LightDM&lt;/li&gt;
&lt;li&gt;Firefox (or other browser)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Set Graphical install &lt;code&gt;sudo systemctl set-default graphical.target&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: There are a ton of different python dependancies and you need to track these down to utilize the full desktop environment&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;my-lcars-script&#34;&gt;My LCARS script&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir lcars-build
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd lcars-build
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://github.com/lcarsde/lcarswm/releases/download/22.1/lcarswm_22.1_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://github.com/lcarsde/menu/releases/download/22.1/lcarsde-app-menu_22.1_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://github.com/lcarsde/status-bar/releases/download/22.2/status-bar_22.2_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://github.com/lcarsde/application-starter/releases/download/21.1/lcarsde-application-starter_21.1_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://github.com/lcarsde/logout/releases/download/20.1/lcarsde-logout_20.1_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dpkg -i *.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt -f install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;using-lcars&#34;&gt;Using LCARS&lt;/h2&gt;
&lt;p&gt;To use it after installation, you logout of your desktop and select LCARS instead of KDE,GNOME, or whatever your current system is. This is an extremely minimal install so you don&amp;rsquo;t have to worry about it conflicting with your current install.&lt;/p&gt;
&lt;p&gt;The complete manual is located @ &lt;a href=&#34;https://lcarsde.github.io/manual.html&#34;&gt;https://lcarsde.github.io/manual.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;setting-up-intial-configuration&#34;&gt;Setting up intial configuration&lt;/h3&gt;
&lt;p&gt;Edit the file @ &lt;code&gt;~/.config/lcarde/status-config.xml&lt;/code&gt; look for these lines and change them to your system:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;widget name=&amp;#34;LcarsdeWifiStatus&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 41         &amp;lt;position x=&amp;#34;4&amp;#34; y=&amp;#34;2&amp;#34; width=&amp;#34;1&amp;#34; height=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 42         &amp;lt;properties&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 43             &amp;lt;!-- Device should correspond to a folder in /sys/class/net that starts with &amp;#34;w&amp;#34; --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 44             &amp;lt;property key=&amp;#34;device&amp;#34; **value=&amp;#34;wlp2s0&amp;#34;** /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 45         &amp;lt;/properties&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 46     &amp;lt;/widget&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 47     &amp;lt;widget name=&amp;#34;LcarsdeEthStatus&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 48         &amp;lt;position x=&amp;#34;4&amp;#34; y=&amp;#34;1&amp;#34; width=&amp;#34;1&amp;#34; height=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 49         &amp;lt;properties&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 50             &amp;lt;!-- Device should correspond to a folder in /sys/class/net that starts with &amp;#34;e&amp;#34; --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 51             &amp;lt;property key=&amp;#34;device&amp;#34; **value=&amp;#34;enp0s20f0u2u3i5&amp;#34;** /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 52         &amp;lt;/properties&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 53     &amp;lt;/widget&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Change the programs to what you use in &lt;code&gt;~/.config/lcarde/settings.xml&lt;/code&gt;
Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  2 &amp;lt;lcarswm&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  3     &amp;lt;key-config&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  4         &amp;lt;!-- keys for executing programs --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  5         &amp;lt;binding&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  6             &amp;lt;keys&amp;gt;Lin+T&amp;lt;/keys&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  7             &amp;lt;exec&amp;gt;kitty&amp;lt;/exec&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  8         &amp;lt;/binding&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  9         &amp;lt;binding&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 10             &amp;lt;keys&amp;gt;Lin+B&amp;lt;/keys&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 11             &amp;lt;exec&amp;gt;brave-browser&amp;lt;/exec&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 12         &amp;lt;/binding&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;images&#34;&gt;Images&lt;/h2&gt;
&lt;p&gt;You can download my completed images if you don&amp;rsquo;t want to build this yourself @ &lt;a href=&#34;https://cttstore.com/star-trek-os&#34;&gt;https://cttstore.com/star-trek-os&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is two image formats part of the download&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VMDK - Virtual Machine Format - VMWare, Virtualbox, and QEMU will all play this.&lt;/li&gt;
&lt;li&gt;Clonezilla tar.gz - Image Backup - You can restore this to any machine using clonezilla after unzipping the files to a USB drive. Clone Any System walkthrough video @ &lt;a href=&#34;https://youtu.be/yQ9NpWZ74BU&#34;&gt;https://youtu.be/yQ9NpWZ74BU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Login Information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User: Kirk&lt;/li&gt;
&lt;li&gt;Pass: 1234&lt;/li&gt;
&lt;li&gt;Hostname: Enterprise&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Release Date: July 22, 2022&lt;/em&gt;&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/hbg-QgKOdac&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Stop Using APT</title>
      <link>http://localhost:1313/stop-using-apt/</link>
      <pubDate>Tue, 19 Jul 2022 17:32:28 -0500</pubDate>
      
      <guid>http://localhost:1313/stop-using-apt/</guid>
      <description>&lt;p&gt;APT is slow&amp;hellip; single downloading and generally uses slow mirrors as it doesn&amp;rsquo;t optimize them out of the box. It also doesn&amp;rsquo;t have a history so rolling back updates can really suck.&lt;/p&gt;
&lt;p&gt;Welp, all that is now fixed with &lt;a href=&#34;https://gitlab.com/volian/nala&#34;&gt;Nala&lt;/a&gt; and it is absolutely wonderful. Not only does it fix all that listed above but it makes the updates look beautiful.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/nala/nala.png&#34; alt=&#34;nala-image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;p&gt;Add Repository - NOT NEEDED FOR Debian SID/testing&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;echo &amp;#34;deb http://deb.volian.org/volian/ scar main&amp;#34; | sudo tee /etc/apt/sources.list.d/volian-archive-scar-unstable.list; wget -qO - https://deb.volian.org/volian/scar.key | sudo tee /etc/apt/trusted.gpg.d/volian-archive-scar-unstable.gpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Install Nala on any Debian Sid or Ubuntu 22+ with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update &amp;amp;&amp;amp; sudo apt install nala
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Install on Debian Stable or Ubuntu 21 and below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update &amp;amp;&amp;amp; sudo apt install nala-legacy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;update-mirrors&#34;&gt;Update Mirrors&lt;/h2&gt;
&lt;p&gt;This will drastically speed up your downloads&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo nala fetch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Select the mirrors you want from the list. Typically you will want to select three. Here is an example:
&lt;img src=&#34;http://localhost:1313/images/2022/nala/mirror.png&#34; alt=&#34;nala-mirror&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;view-update-history&#34;&gt;View Update History&lt;/h2&gt;
&lt;p&gt;Nala has a robust history and even an UNDO! These commands are a life saver.&lt;/p&gt;
&lt;p&gt;View the history:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nala history
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Undo a history (&lt;code&gt;sudo nala history undo ID&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo nala history undo 1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;convert-apt-to-nala&#34;&gt;Convert APT to Nala&lt;/h2&gt;
&lt;p&gt;Add the following to your &lt;code&gt;~/.bashrc&lt;/code&gt; AND &lt;code&gt;/root/.bashrc&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt() { 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  command nala &amp;#34;$@&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo() {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  if [ &amp;#34;$1&amp;#34; = &amp;#34;apt&amp;#34; ]; then
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    shift
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    command sudo nala &amp;#34;$@&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  else
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    command sudo &amp;#34;$@&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  fi
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From here you can install programs with apt or nala command and it will always work perfectly!&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This is everything I want in a package manager and more. My hat is off to the team that came up with all these drastic improvements and it has made my life so much easier on Debian based systems!&lt;/p&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/oroSkR4Nn_w&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu&#39;s Decline</title>
      <link>http://localhost:1313/ubuntu-decline/</link>
      <pubDate>Mon, 27 Jun 2022 15:52:45 -0500</pubDate>
      
      <guid>http://localhost:1313/ubuntu-decline/</guid>
      <description>&lt;p&gt;When Ubuntu came on the scene in 2004, it made desktop Linux viable to many with its ease of use and friendly layout. Instead of constantly improving this and becoming the &amp;ldquo;King of All Distributions&amp;rdquo; it took a very different path. While I still use Ubuntu server with some caveats, I will NOT use Ubuntu Desktop.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/ubuntu-decline/ubuntu.png&#34; alt=&#34;ubuntu&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-ubuntu-does-right&#34;&gt;What Ubuntu does right&lt;/h2&gt;
&lt;p&gt;Before we roast Ubuntu and its decline, we need to understand why they rose to the top. Not only did they make Linux desktop easy, but they did the same in the server realm as well. They also made highly successful and well designed products for Linux, like the Unity Desktop Environment. They were one of the first to also make it easy for us to use nVidia cards on our systems without much fuss.&lt;/p&gt;
&lt;h2 id=&#34;the-things-that-lead-to-the-decline&#34;&gt;The things that lead to the decline&lt;/h2&gt;
&lt;p&gt;This is not going to be an exhaustive list, but rather the large things they have done to ensure their downfall and what has caused many to leave Ubuntu to never return.&lt;/p&gt;
&lt;h3 id=&#34;snaps&#34;&gt;Snaps&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/ubuntu-decline/snaps.png&#34; alt=&#34;snaps&#34;&gt;&lt;/p&gt;
&lt;p&gt;By far the biggest issue with Ubuntu is Snaps. They created a universal package manager that can work on any system. Sounds amazing, right? WRONG! The two biggest issues are simple: Its slow as hell and closed source.&lt;/p&gt;
&lt;p&gt;How is it slow? Well, it can take upwards of 10-15 seconds to launch Firefox snap, which is a web browser that would normally take MAYBE 1-2 seconds. What the hell Canonical!?! It&amp;rsquo;s obviously not ready, so why are forcing everyone to use snaps? Do they just not like users? Do they think their users are just too stupid to know its this slow?&lt;/p&gt;
&lt;p&gt;Closed Source. This can be summed up to there is only one place to download packages, Canonical. Want to open up a Snap store for a competing distribution? Too bad, its closed source. Is this the worst thing about it? No, but why bother with it when there are better solutions like AppImage and Flatpak which ARE open source?&lt;/p&gt;
&lt;h3 id=&#34;spyware&#34;&gt;Spyware&lt;/h3&gt;
&lt;p&gt;Back in Ubuntu 14 they were submitting search results to Canonical. Then in Ubuntu 16 they introduced a bundled amazon store which they were compensated for. Too many this was just simply spyware on their distribution. A blatant cash grab if you will&amp;hellip; However, to me it screams of desperation. They want or need money and this was the easiest way to accomplish this. Apple and Microsoft does this&amp;hellip; why not Canonical? The answer is surprisingly simple, many users ran from big tech for privacy and why choose Ubuntu when their are so many better distributions.&lt;/p&gt;
&lt;h3 id=&#34;lack-of-commitment&#34;&gt;Lack of commitment&lt;/h3&gt;
&lt;p&gt;The last reason many users have given up on Ubuntu is it just feels like Canonical is padding their balance sheet for an eventual buyout from some biggest tech firm. The days of innovation are over and they have killed so many projects that no one trusts them anymore. It has been eroded away by not listening to the community, doing things not in the best interest of their users, and abandoning many, many projects. Here is the short list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu Touch&lt;/li&gt;
&lt;li&gt;Unity Desktop Environment&lt;/li&gt;
&lt;li&gt;Mir Display Manager&lt;/li&gt;
&lt;li&gt;Ubuntu One (Cloud services)&lt;/li&gt;
&lt;li&gt;PPA Repos - .DEB Packages being phased out from Software Centre&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-future&#34;&gt;The Future&lt;/h2&gt;
&lt;p&gt;The future of Ubuntu Desktop is pretty bleak. It feels like we are watching it circle the toilet bowl to be forever gone in a few years. I want to give two outcomes&amp;hellip;&lt;/p&gt;
&lt;p&gt;It continues down this path, forcing everyone to use snaps and fades to irrelevance until the entire desktop offering is discontinued.&lt;/p&gt;
&lt;p&gt;It cuts it losses with snaps and starts streamlining their distro. Gone are the days of slow boot times and bloated distribution installs. It reverts to what it began as&amp;hellip; a user friendly and easy to user distribution that just works.&lt;/p&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/pMfqCzbSmQU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>GRUB Bootloader Themes</title>
      <link>http://localhost:1313/bootloader-themes/</link>
      <pubDate>Mon, 01 Mar 2021 14:53:09 -0600</pubDate>
      
      <guid>http://localhost:1313/bootloader-themes/</guid>
      <description>&lt;p&gt;Do you dual boot often? Well make the Bootloader Selection Screen Awesome! Here are my top 5 GRUB Bootloader themes.&lt;/p&gt;
&lt;h2 id=&#34;all-in-one-pack&#34;&gt;All-In-One Pack&lt;/h2&gt;
&lt;p&gt;This Pack is everything below so you can swap between them. It is a custom script I made so I can choose any of my favorite bootloaders below. This may not include original project updates as they happen, so check the source links below if one of the themes doesn&amp;rsquo;t work for you!&lt;/p&gt;
&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/ChrisTitusTech/Top-5-Bootloader-Themes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd Top-5-Bootloader-Themes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ./install.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;cyberre&#34;&gt;CyberRE&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2021/02-bootloader/cyberre.jpg&#34; alt=&#34;CyberRE&#34;&gt;&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://www.gnome-look.org/p/1420727/&#34;&gt;https://www.gnome-look.org/p/1420727/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;cyberpunk&#34;&gt;CyberPunk&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2021/02-bootloader/cyberpunk.jpg&#34; alt=&#34;Cyberpunk&#34;&gt;&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://www.gnome-look.org/p/1429443/&#34;&gt;https://www.gnome-look.org/p/1429443/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;fallout&#34;&gt;Fallout&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2021/02-bootloader/fallout.jpg&#34; alt=&#34;Fallout&#34;&gt;&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://www.gnome-look.org/p/1230882/&#34;&gt;https://www.gnome-look.org/p/1230882/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;vimix&#34;&gt;Vimix&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2021/02-bootloader/vimix.jpg&#34; alt=&#34;Vimix&#34;&gt;&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://www.gnome-look.org/p/1009236/&#34;&gt;https://www.gnome-look.org/p/1009236/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;shodan&#34;&gt;Shodan&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2021/02-bootloader/shodan.jpg&#34; alt=&#34;Shodan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://www.gnome-look.org/p/1251112/&#34;&gt;https://www.gnome-look.org/p/1251112/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux MacOS</title>
      <link>http://localhost:1313/linux-macos/</link>
      <pubDate>Mon, 05 Oct 2020 13:03:31 -0500</pubDate>
      
      <guid>http://localhost:1313/linux-macos/</guid>
      <description>&lt;p&gt;This Project is to make Ubuntu and other derivative distributions (Mint, PopOS, etc.) look like MacOS. &lt;em&gt;Version 20+ is required&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Source Files in this project&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnome-look.org/p/1148692/&#34;&gt;https://www.gnome-look.org/p/1148692/&lt;/a&gt; - Capitine Cursors&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pling.com/p/1403328/&#34;&gt;https://www.pling.com/p/1403328/&lt;/a&gt; - WhiteSur GTK Theme&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pling.com/p/1399044/&#34;&gt;https://www.pling.com/p/1399044/&lt;/a&gt; - BigSur Icon Theme&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/PRATAP-KUMAR/focalgdm3&#34;&gt;https://github.com/PRATAP-KUMAR/focalgdm3&lt;/a&gt; - Login Theme&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://albertlauncher.github.io/docs/installing/&#34;&gt;https://albertlauncher.github.io/docs/installing/&lt;/a&gt; - Albert&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pling.com/p/1401527/&#34;&gt;https://www.pling.com/p/1401527/&lt;/a&gt; - Cairo Dock&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;h3 id=&#34;dependency-installs&#34;&gt;Dependency Installs&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install git gnome-shell-extensions chrome-gnome-shell gnome-tweak-tool -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/ChrisTitusTech/Linux-MacOS-GNOME.git ~/MacOS
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir ~/.themes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir ~/.icons
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv ~/MacOS/themes/* ~/.themes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv ~/MacOS/icons/* ~/.icons
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mv ~/MacOS/walls/* /usr/share/backgrounds/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gnome-tweaks&#34;&gt;Gnome Tweaks&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.mutter center-new-windows &amp;#39;true&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.wm.preferences button-layout &amp;#39;close,minimize,maximize:&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.interface gtk-theme &amp;#34;WhiteSur-dark&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.wm.preferences theme &amp;#34;WhiteSur-dark&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.interface icon-theme &amp;#39;BigSur&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.interface cursor-theme &amp;#39;capitaine-cursors-light&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.background picture-uri &amp;#39;file:///usr/share/backgrounds/macOS-BS3.jpg&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings get org.gnome.desktop.screensaver picture-uri &amp;#39;file:///usr/share/backgrounds/macOS-BS1.jpg&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;albert-search-and-cairo-dock&#34;&gt;Albert Search and Cairo Dock&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl https://build.opensuse.org/projects/home:manuelschneid3r/public_key | sudo apt-key add -
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;echo &amp;#39;deb http://download.opensuse.org/repositories/home:/manuelschneid3r/xUbuntu_20.04/ /&amp;#39; | sudo tee /etc/apt/sources.list.d/home:manuelschneid3r.list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo wget -nv https://download.opensuse.org/repositories/home:manuelschneid3r/xUbuntu_20.04/Release.key -O &amp;#34;/etc/apt/trusted.gpg.d/home:manuelschneid3r.asc&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install albert cairo-dock cairo-dock-plug-ins -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Launch Albert&lt;/li&gt;
&lt;li&gt;Set Hotkey - Meta + F&lt;/li&gt;
&lt;li&gt;Set Theme Arc Dark Blue&lt;/li&gt;
&lt;li&gt;Enable Albert Extensions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;gnome-extensions&#34;&gt;Gnome Extensions&lt;/h3&gt;
&lt;p&gt;Enable Extensions by visiting &lt;a href=&#34;https://extensions.gnome.org/&#34;&gt;https://extensions.gnome.org/&lt;/a&gt; install add-on and reload browser&lt;/p&gt;
&lt;p&gt;Install the Following Extensions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User Themes - &lt;a href=&#34;https://extensions.gnome.org/extension/19/user-themes/&#34;&gt;https://extensions.gnome.org/extension/19/user-themes/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Frippery Move Clock - &lt;a href=&#34;https://extensions.gnome.org/extension/2/move-clock/&#34;&gt;https://extensions.gnome.org/extension/2/move-clock/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dynamic Panel Transparency - &lt;a href=&#34;https://extensions.gnome.org/extension/1011/dynamic-panel-transparency/&#34;&gt;https://extensions.gnome.org/extension/1011/dynamic-panel-transparency/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Panel OSD - &lt;a href=&#34;https://extensions.gnome.org/extension/708/panel-osd/&#34;&gt;https://extensions.gnome.org/extension/708/panel-osd/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;manual-extension-configurations&#34;&gt;Manual Extension Configurations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Panel OSD - Change Horizontal and Vertical to 98&lt;/li&gt;
&lt;li&gt;Cairo Dock - Set to Startup Applications&lt;/li&gt;
&lt;li&gt;Cairo Dock Themes - Import all gz files to Cairo configure in ~/MacOS/cairo&lt;/li&gt;
&lt;li&gt;Cairo Dock Configure - Turn of Icon effects and animations and hide dock when overlapping windows&lt;/li&gt;
&lt;li&gt;Cairo Dock Launchpad - Add Custom Launchpad Shortcut &lt;code&gt;dbus-send --session --type=method_call --dest=org.gnome.Shell /org/gnome/Shell org.gnome.Shell.Eval string:&#39;Main.shellDBusService.ShowApplications();&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Disable Ubuntu Dock (Not Needed on PopOS)&lt;/li&gt;
&lt;li&gt;Dynamic Panel Transparency - Background Tab - Max Opacity 100 - Min Opacity 50&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Disable Snaps</title>
      <link>http://localhost:1313/disable-snaps/</link>
      <pubDate>Tue, 08 Sep 2020 13:44:58 -0500</pubDate>
      
      <guid>http://localhost:1313/disable-snaps/</guid>
      <description>&lt;p&gt;This goes over how to Disable Snaps and making sure it doesn&amp;rsquo;t automatically reinstall.&lt;/p&gt;
&lt;h2 id=&#34;list-and-uninstall-snaps&#34;&gt;List and Uninstall Snaps&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;snap list # This shows you what snaps are installed
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo snap remove program # Fill in all snaps listed above
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;purge-snaps-and-block-reinstall&#34;&gt;Purge Snaps and Block Reinstall&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt purge snapd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-mark hold snapd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;verify-uninstall&#34;&gt;Verify Uninstall&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt list --install | grep snap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check your Output for any snap packages&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Install Wine Libfaudio0 Error</title>
      <link>http://localhost:1313/install-wine-libfaudio0-error/</link>
      <pubDate>Mon, 25 May 2020 13:14:23 -0500</pubDate>
      
      <guid>http://localhost:1313/install-wine-libfaudio0-error/</guid>
      <description>&lt;p&gt;This article helps you fix the Libfaudio0 error that you run into when installing Wine on an older Linux debian-based distribution like Linux Mint 19 or Ubuntu 18.&lt;/p&gt;
&lt;p&gt;Fix the dependancy error by downloading the following packages&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_18.04/amd64/libfaudio0_19.07-0~bionic_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_18.04/i386/libfaudio0_19.07-0~bionic_i386.deb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once these are downloaded you need to installed them with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dpkg -i libfaudio0_19.07-0~bionic_amd64.deb libfaudio0_19.07-0~bionic_i386.deb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now that we have fixed the dependency error you can proceed with your wine-staging installation. Not this is mainly an error for bleeding edge version of wine from the WineHQ PPA.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How To Setup a VPN Kill Switch Server</title>
      <link>http://localhost:1313/vpn-kill-switch/</link>
      <pubDate>Mon, 02 Dec 2019 05:31:59 +0000</pubDate>
      
      <guid>http://localhost:1313/vpn-kill-switch/</guid>
      <description>&lt;p&gt;This will show you how to set up a VPN Kill Switch so all traffic will come from that server. For this server, I am using CentOS, but you can easily use Ubuntu server if you are more familiar with that.&lt;/p&gt;
&lt;h2 id=&#34;install-packages&#34;&gt;Install packages&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../images/2019/12/instal.png&#34; alt=&#34;install image&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt install openvpn ufw -y&lt;/code&gt;&lt;br&gt;
&lt;em&gt;*Note: use apt instead of dnf on Ubuntu or Debian Servers&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;set-static-ip&#34;&gt;Set Static IP&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sudo nmtuisudo nmcli connection down eth0 &amp;amp;&amp;amp; sudo nmcli connection up eth0&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;download-ovpn-files&#34;&gt;Download OVPN Files&lt;/h2&gt;
&lt;p&gt;My recommendation for a Public VPN Provider is Express VPN. It is what I use below and in my VPN videos due to its speed and amount of servers. This is my affiliate link where you will receive an extra 3 months free for signing up for a year. &lt;a href=&#34;https://christitus.com/expressvpn&#34;&gt;https://christitus.com/expressvpn&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;However, you can use these instructions on ANY VPN that provides ovpn files which any reputable VPN provider has.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv ~/Downloads/client.ovpn /etc/openvpn/test.conf&lt;/code&gt;&lt;/p&gt;
&lt;!--adsense--&gt;
&lt;h2 id=&#34;service-creation&#34;&gt;Service creation&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../images/2019/12/sysinstall.png&#34; alt=&#34;sysinstall image&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls /lib/systemd/system/&lt;/code&gt;&lt;br&gt;
&lt;em&gt;*Check for openvpn-client@ or openvpn@&lt;/em&gt;&lt;br&gt;
&lt;code&gt;sudo systemctl start openvpn@test&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;disable-ipv6-and-secure-system&#34;&gt;Disable ipv6 and Secure System&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../images/2019/12/sysctl.png&#34; alt=&#34;sysctl&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo nano /etc/sysctl.conf&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;net.ipv6.conf.all.disable_ipv6=1&lt;br&gt;
net.ipv6.conf.default.disable_ipv6=1&lt;br&gt;
net.ipv6.conf.lo.disable_ipv6=1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;sudo sysctl -p&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Verify Ipv6 is disabled&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cat /proc/sys/net/ipv6/conf/all/disable_ipv6&lt;/code&gt;&lt;br&gt;
&lt;code&gt;sudo sysctl --all | grep disable_ipv6&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;firewall-ufw-blocks-8211-vpn-kill-switch&#34;&gt;Firewall ufw blocks – VPN Kill Switch&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../images/2019/12/vpnsetup.png&#34; alt=&#34;install image&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo nano /etc/default/ufw&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IPV6=no&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Whitelist Local Area Network&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo ufw allow in to 192.168.1.0/24&lt;/code&gt;&lt;br&gt;
&lt;code&gt;sudo ufw allow out to 192.168.1.0/24&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;Block All Incoming and Outgoing Traffic by Default&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo ufw default deny outgoing&lt;/code&gt;&lt;br&gt;
&lt;code&gt;sudo ufw default deny incoming&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;Whitelist VPN Port for VPN Establishment&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo ufw allow out to any port 1194 proto udp&lt;/code&gt;&lt;br&gt;
&lt;em&gt;*check port by doing head /etc/openvpn/expressvpn.conf&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Whitelist VPN Tunnel&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo ufw allow out on tun0 from any to any&lt;/code&gt;&lt;br&gt;
&lt;code&gt;sudo ufw allow in on tun0 from any to any&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;Enable Firewall&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo ufw enable&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;external-program-setup-on-server&#34;&gt;External Program Setup on Server&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../images/2019/12/transmission.png&#34; alt=&#34;install image&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;X11 Forwarding&lt;/strong&gt;&lt;br&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/auePeI8vZA8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Transmission daemon&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo apt install transmission-daemon&lt;/code&gt;&lt;br&gt;
&lt;code&gt;sudo systemctl stop transmission-daemon&lt;/code&gt;&lt;br&gt;
&lt;code&gt;sudo nano /etc/transmission-daemon/settings.json&lt;/code&gt;&lt;br&gt;
&lt;em&gt;*enable rpc and whitelist, add blocklist&lt;/em&gt;&lt;br&gt;
&lt;code&gt;sudo systemctl start transmission-daemon&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;full-video-walkthrough&#34;&gt;Full Video Walkthrough&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wc-Ti8UoPoA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>How to Secure A Web Server</title>
      <link>http://localhost:1313/secure-web-server/</link>
      <pubDate>Thu, 10 Oct 2019 13:37:49 +0000</pubDate>
      
      <guid>http://localhost:1313/secure-web-server/</guid>
      <description>&lt;p&gt;In this article, I show you all the steps needed to secure a web server and improve your security. I recommend doing all of these things on every installation. Also, just because you secure your server doesn’t mean you can neglect it. I highly recommend monitoring it and adjusting security as needed. Monitoring is required for proper security in my opinion.&lt;/p&gt;
&lt;h1 id=&#34;secure-a-web-server-steps&#34;&gt;Secure A Web Server Steps&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2019/10/firewall-png-577x359.png&#34; alt=&#34;firewall-png-577&amp;amp;#215;359&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install UFW&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get update  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install ufw  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw limit 22/tcp  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw allow 80/tcp  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw allow 443/tcp  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw enable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Verify&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo ufw status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Do Global blocks&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw default deny incoming  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw default allow outgoing
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2019/09/ssh.png&#34; alt=&#34;ssh&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;change-ssh-to-key&#34;&gt;Change SSH to Key&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Remote Machine&lt;/strong&gt;: &lt;code&gt;ssh-keygen -t rsa&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;transfer-to-server&#34;&gt;Transfer to Server&lt;/h3&gt;
&lt;h4 id=&#34;method-1&#34;&gt;Method 1:&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Transfer pub ssh key to server&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scp ~/.ssh/id_rsa.pub user@server.com:~
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat ~/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;method-2&#34;&gt;Method 2:&lt;/h4&gt;
&lt;p&gt;Copy key and place in authorized_key file in one command&lt;br&gt;
&lt;code&gt;ssh-copy-id -i ~/.ssh/id_rsa.pub user@server.com&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;secure-a-web-server-disabling-password-auth-through-ssh&#34;&gt;Secure a Web Server Disabling Password Auth through SSH&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Change the following lines in /etc/sshd_config&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ChallengeResponseAuthentication no
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PasswordAuthentication no
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;UsePAM no
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PermitRootLogin no
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;edit-etcsysctlconf&#34;&gt;Edit /etc/sysctl.conf&lt;/h2&gt;
&lt;p&gt;Enable security features&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2019/10/settings.png&#34; alt=&#34;settings&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;prevent-ip-spoof-etchostconf&#34;&gt;Prevent IP Spoof /etc/host.conf&lt;/h2&gt;
&lt;p&gt;Change File to mirror below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;​order bind,hosts
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;multi on
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nospoof on
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;install-fail2ban&#34;&gt;Install Fail2Ban&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install fail2ban
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl enable fail2ban
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl start fail2ban
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;check-listening-ports&#34;&gt;Check Listening Ports&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;netstat -tunlp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You will now have completed the basics of a secure web server!&lt;/p&gt;
&lt;h2 id=&#34;video-walkthrough&#34;&gt;Video Walkthrough&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/7pJKBL9x6bY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>How to Install Linux for the First Time</title>
      <link>http://localhost:1313/install-linux-first-time/</link>
      <pubDate>Thu, 18 Oct 2018 15:23:20 +0000</pubDate>
      
      <guid>http://localhost:1313/install-linux-first-time/</guid>
      <description>&lt;p&gt;This article goes over installing Linux for the first time. I will break it down into 3 parts with a Video Walkthrough. Using this will make it very easy for you to install Linux for the first time.&lt;/p&gt;
&lt;h2 id=&#34;choosing-the-right-version-or-flavor-of-linux&#34;&gt;Choosing the right version or flavor of Linux&lt;/h2&gt;
&lt;p&gt;Latest Ubuntu Desktop LTS – &lt;a href=&#34;https://www.ubuntu.com/download&#34;&gt;https://www.ubuntu.com/download&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RUFUS USB Creator for Windows – &lt;a href=&#34;https://rufus.ie/en_IE.html&#34;&gt;https://rufus.ie/en_IE.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;installation-process&#34;&gt;Installation Process&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Download ISO for ubuntu&lt;/li&gt;
&lt;li&gt;Create a USB Thumb drive&lt;/li&gt;
&lt;li&gt;Install&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2011/11/business-code-codes-207580.jpg&#34; alt=&#34;business-codes&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;basic-configuration&#34;&gt;Basic Configuration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Installing Software&lt;/li&gt;
&lt;li&gt;Using GUI / Gnome / Search&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;video-walkthrough&#34;&gt;Video Walkthrough&lt;/h2&gt;
&lt;p&gt;Here is an entire Video playlist that you can choose from depending on where you are in the installation process. This is geared for new Linux users.&lt;br&gt;
&lt;a href=&#34;https://www.youtube.com/playlist?list=PLc7fktTRMBoz7n-ugZm2Ndi0np_Y4Hh1k&#34;&gt;https://www.youtube.com/playlist?list=PLc7fktTRMBoz7n-ugZm2Ndi0np_Y4Hh1k&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In conclusion, this will get you started with Linux. It is a steep learning curve starting out, but well worth it in the end. After you install Linux for the first time, you will need some time to adjust. I personally did this for my Mother-In-Law and she loves it. She never has to worry about viruses or her computer crashing, which was happening often in Windows, and it was the perfect solution for her.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ideas</title>
      <link>http://localhost:1313/ideas/</link>
      <pubDate>Wed, 14 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/ideas/</guid>
      <description>&lt;p&gt;Current Ideas for Videos and Articles&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; ZFS, couple that with Sanoid and Syncoid&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Tiling Window Manager for Windows - &lt;a href=&#34;https://github.com/LGUG2Z/komorebi&#34;&gt;https://github.com/LGUG2Z/komorebi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; TrueNAS Scale&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Hyprland Window Manager for Wayland - &lt;a href=&#34;https://github.com/hyprwm/Hyprland&#34;&gt;https://github.com/hyprwm/Hyprland&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Setting Up Linux Gaming&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Live Stream Radio Browser Program &lt;a href=&#34;https://strimio.com/&#34;&gt;https://strimio.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; DSTask - &lt;a href=&#34;https://github.com/naggie/dstask&#34;&gt;https://github.com/naggie/dstask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;http://Portainer.io&#34;&gt;Portainer.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; PiKVM (&lt;a href=&#34;https://pikvm.org/)%5Bhttps://pikvm.org/%5D(https://pikvm.org/&#34;&gt;https://pikvm.org/)[https://pikvm.org/](https://pikvm.org/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; KVM / QEMU full tutorial&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Zerotier - BestVPN&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Darling - MacOS Emulation &lt;a href=&#34;https://www.darlinghq.org/&#34;&gt;https://www.darlinghq.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; plex server setup linux&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Enable GPO in Win 10 Home &lt;a href=&#34;https://www.itechtics.com/enable-gpedit-windows-10-home/#Method_1_Enable_Group_Policy_Editor_in_Windows_10_Home_using_GPEdit_Installer&#34;&gt;https://www.itechtics.com/enable-gpedit-windows-10-home/#Method_1_Enable_Group_Policy_Editor_in_Windows_10_Home_using_GPEdit_Installer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; automount drives systemd&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; rEFInd Bootloader&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;http://snapdrop.net/&#34;&gt;snapdrop.net&lt;/a&gt; - Share files between devices&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; WinGet and Windows Terminal&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://mycroft.ai&#34;&gt;https://mycroft.ai&lt;/a&gt; - Open Source Home Assistant&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Samba Advanced Video&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Github config save&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; systemd-services on startup cleanup&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; debtap install deb packages on arch - rpm2cpio - alien&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/dreamer/luxtorpeda/&#34;&gt;https://github.com/dreamer/luxtorpeda/&lt;/a&gt; - Gaming native&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; OpenHABian&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Startup Programs and managing them&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Live USB Environments&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; jellyfin&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Adding Android Libraries / Davik Virtualization&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Quibble Windows Bootloader - &lt;a href=&#34;https://github.com/maharmstone/quibble&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/maharmstone/quibble&#34;&gt;https://github.com/maharmstone/quibble&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Kodachi&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Linux Users and Groups&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Grafana Zabbix Monitoring&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Alienvault OSSIM&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; resize filesystem&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; URXVT&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Ranger&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Vagrant&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Arch CHROOT Repair&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; alpine linux - The 100MB Linux&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Kubernetes Initial Setup&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; DEX Linux&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Making a workstation to load images on PCs - FOG Project&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Linux Screen Command&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Firejail&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Chroot from USB drive&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Debloat Linux&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Linux Firewall - UFW&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;http://privacytools.io/&#34;&gt;Privacytools.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add SSD or Hard Drive to VM&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; pulse effects and pulse equalizer&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; PxE and TFTP Servers&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Update MOTD for on Servers&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Using the grep command&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; LAMP Stack on Ubuntu&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; SMB4k&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Docker&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Redhat Line of Products (Insights / Ansible / OpenShift)&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Snaps and Flatpacks&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
