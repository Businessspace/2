<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Powershell on Chris Titus Tech | Tech Content Creator</title>
    <link>http://localhost:1313/tags/powershell/</link>
    <description>Recent content in Powershell on Chris Titus Tech | Tech Content Creator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install Windows Update Powershell</title>
      <link>http://localhost:1313/install-windows-update-powershell/</link>
      <pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/install-windows-update-powershell/</guid>
      <description>&lt;p&gt;Did you know you can install updates with using PowerShell? This is the Guide for doing that!&lt;/p&gt;
&lt;h2 id=&#34;pre-requisites&#34;&gt;Pre-requisites&lt;/h2&gt;
&lt;p&gt;To install Windows updates via PowerShell, you need to install the module first:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Install-Module PSWindowsUpdate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Add-WUServiceManager -MicrosoftUpdate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;commands&#34;&gt;Commands&lt;/h2&gt;
&lt;p&gt;Install all available updates&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Install-WindowsUpdate -MicrosoftUpdate -AcceptAll -AutoReboot | Out-File &amp;#34;C:\($env.computername-Get-Date -f yyyy-MM-dd)-MSUpdates.log&amp;#34; -Force
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Force other computers to update&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$Computers = &amp;#34;pc2,pc3,pc4&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Invoke-WUJob -ComputerName $Computers -Script {Import-Module PSWindowsUpdate; Install-WindowsUpdate -MicrosoftUpdate -AcceptAll -AutoReboot} -RunNow -Confirm:$false | Out-File &amp;#34;c:\$Computers-$(Get-Date -f yyyy-MM-dd)-MSUpdates.log&amp;#34; -Force
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/M2mMQfPGZsE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>One Tool for Everything</title>
      <link>http://localhost:1313/one-tool-for-everything/</link>
      <pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/one-tool-for-everything/</guid>
      <description>&lt;p&gt;A massive update has arrived for the Windows Utility! Check out all the new features.&lt;/p&gt;
&lt;p&gt;Run Directly from PowerShell with Admin&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;irm christitus.com/win | iex
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;new-features&#34;&gt;New Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tooltip addition to Tweaks&lt;/li&gt;
&lt;li&gt;Auto Login Added&lt;/li&gt;
&lt;li&gt;Manually Set DNS Servers&lt;/li&gt;
&lt;li&gt;Large number of new program additions&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bug-fixes&#34;&gt;Bug Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Program installed pops up before install complete&lt;/li&gt;
&lt;li&gt;Improved Readme on Github&lt;/li&gt;
&lt;li&gt;Better Scaling for large monitors&lt;/li&gt;
&lt;li&gt;Undo Tweak Fixes&lt;/li&gt;
&lt;li&gt;Better Button Placement&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;live-tracker&#34;&gt;Live Tracker&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/users/ChrisTitusTech/projects/1/views/1&#34;&gt;https://github.com/users/ChrisTitusTech/projects/1/views/1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;new-tweak-options&#34;&gt;New Tweak Options&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/one-tool-for-everything/tweaks.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;github-project&#34;&gt;GitHub Project&lt;/h2&gt;
&lt;p&gt;Check out the official Github page @ &lt;a href=&#34;https://github.com/ChrisTitusTech/winutil&#34;&gt;https://github.com/ChrisTitusTech/winutil&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;donate-and-get-the-executable&#34;&gt;Donate and Get the Executable&lt;/h2&gt;
&lt;p&gt;Want to run from an exe file? Donate $10 @ &lt;a href=&#34;https://www.cttstore.com/windows-toolbox&#34;&gt;https://www.cttstore.com/windows-toolbox&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/vXyMScSbhk4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Pretty Powershell</title>
      <link>http://localhost:1313/pretty-powershell/</link>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/pretty-powershell/</guid>
      <description>&lt;p&gt;PowerShell is UGLY and cumbersome by default. This Guide fixes that!&lt;/p&gt;
&lt;p&gt;The End Result:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/pretty-powershell/end-result.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;fixing-the-visuals&#34;&gt;Fixing the Visuals&lt;/h2&gt;
&lt;p&gt;With all my guides here is the one line script to install &amp;ldquo;most&amp;rdquo; of the needed fixes. I&amp;rsquo;d recommend running it from an admin elevated prompt for installation of OhMyPosh.&lt;/p&gt;
&lt;h3 id=&#34;one-line-install&#34;&gt;One Line Install&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;irm &amp;#34;https://github.com/ChrisTitusTech/powershell-profile/raw/main/setup.ps1&amp;#34; | iex
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first thing that needs to be fixed is installing the correct font. Here are screenshots from both Windows 11 using Terminal and Windows 10 using Conhost. After running the above script, you will unzip the &lt;code&gt;cove.zip&lt;/code&gt; file from the directory the command above was run from and install those nerd fonts. If you want to download other nerd fonts, go to: &lt;a href=&#34;https://www.nerdfonts.com/&#34;&gt;https://www.nerdfonts.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;windows-11-font-settings&#34;&gt;Windows 11 Font Settings&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/pretty-powershell/win11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;windows-10-font-settings&#34;&gt;Windows 10 Font Settings&lt;/h3&gt;
&lt;p&gt;In the screenshot below you will see the stock font select and the missing icons. Selecting CaskaydiaCove above Consolas and saving will fix it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2022/pretty-powershell/win10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;fixing-the-syntax&#34;&gt;Fixing the Syntax&lt;/h2&gt;
&lt;p&gt;The defaults are clunky and take too long to type in even when using shorthand. Linux does this better, so lets bring in that syntax to fix it with Aliases in our PowerShell profile.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Every time I&amp;#39;m in Windows PowerShell I can&amp;#39;t help but think that the Microsoft Devs were on some heavy drugs when setting commands.&lt;br&gt;I&amp;#39;m going to fix that. &lt;a href=&#34;https://t.co/AVaOCoVyOT&#34;&gt;pic.twitter.com/AVaOCoVyOT&lt;/a&gt;&lt;/p&gt;&amp;mdash; Chris Titus Tech (@christitustech) &lt;a href=&#34;https://twitter.com/christitustech/status/1581708112394096640?ref_src=twsrc%5Etfw&#34;&gt;October 16, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;new-aliases&#34;&gt;New Aliases&lt;/h3&gt;
&lt;p&gt;Here are the following added aliases for quality of life&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cd&amp;hellip; &lt;code&gt;cd ..\..&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;cd&amp;hellip;. &lt;code&gt;cd ..\..\..&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;dirs &amp;ldquo;Recursive directory listing&amp;rdquo;&lt;/li&gt;
&lt;li&gt;admin / su / sudo &amp;ldquo;Elevate to admin prompt&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Edit-Profile &amp;ldquo;Edit current powershell $PROFILE&amp;rdquo;&lt;/li&gt;
&lt;li&gt;vim &lt;code&gt;nvim&lt;/code&gt; &amp;ldquo;Neovim alias&amp;rdquo;&lt;/li&gt;
&lt;li&gt;ll &amp;ldquo;file listing, excluding dirs&amp;rdquo;&lt;/li&gt;
&lt;li&gt;g &amp;ldquo;cd to Documents\Github&amp;rdquo;&lt;/li&gt;
&lt;li&gt;gcom &amp;ldquo;quick github commit&amp;rdquo;&lt;/li&gt;
&lt;li&gt;lazyg &amp;ldquo;quick github commit and push&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Get-PubIP &amp;ldquo;Grab external IP&amp;rdquo;&lt;/li&gt;
&lt;li&gt;uptime&lt;/li&gt;
&lt;li&gt;reload-profile&lt;/li&gt;
&lt;li&gt;find-file &amp;ldquo;recursive file search from current directory&amp;rdquo;&lt;/li&gt;
&lt;li&gt;unzip&lt;/li&gt;
&lt;li&gt;grep&lt;/li&gt;
&lt;li&gt;touch&lt;/li&gt;
&lt;li&gt;df &amp;ldquo;disk free&amp;rdquo;&lt;/li&gt;
&lt;li&gt;sed&lt;/li&gt;
&lt;li&gt;which&lt;/li&gt;
&lt;li&gt;export&lt;/li&gt;
&lt;li&gt;pkill &amp;ldquo;process killer&amp;rdquo;&lt;/li&gt;
&lt;li&gt;pgrep &amp;ldquo;process finder&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/LuAipOW8BNQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Windows 10 Optimization Guide</title>
      <link>http://localhost:1313/Windows-10-Optimization-Guide/</link>
      <pubDate>Wed, 30 Dec 2020 14:34:52 -0600</pubDate>
      
      <guid>http://localhost:1313/Windows-10-Optimization-Guide/</guid>
      <description>&lt;p&gt;This guide goes over using a Custom ISO, Removing Windows 10 Components, and Optimizing Windows 10 Settings.&lt;/p&gt;
&lt;h2 id=&#34;custom-iso&#34;&gt;Custom ISO&lt;/h2&gt;
&lt;p&gt;The whole purpose of a custom ISO is to make the initial install as slim as possible. You don&amp;rsquo;t have to uninstall bloat if it never gets installed to begin with!&lt;/p&gt;
&lt;p&gt;Easiest Method &lt;em&gt;NTLite&lt;/em&gt; ($30) - &lt;a href=&#34;https://www.ntlite.com/&#34;&gt;https://www.ntlite.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Free Method &lt;em&gt;MSMG Toolkit&lt;/em&gt; - &lt;a href=&#34;https://msmgtoolkit.in/&#34;&gt;https://msmgtoolkit.in/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;How to Make a Custom Windows 10 ISO with &lt;em&gt;MSMG Toolkit&lt;/em&gt; Video&lt;br&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/R6XPff38iSc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;microsoft-method-for-custom-iso-advanced-users-only&#34;&gt;Microsoft Method for Custom ISO (Advanced Users Only)&lt;/h3&gt;
&lt;p&gt;Downloading in Installing ADK (Microsoft Image Tools) &lt;a href=&#34;https://docs.microsoft.com/en-us/windows-hardware/get-started/adk-install&#34;&gt;https://docs.microsoft.com/en-us/windows-hardware/get-started/adk-install&lt;/a&gt;
Using sysprep from Microsoft &lt;a href=&#34;https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/sysprep--generalize--a-windows-installation&#34;&gt;https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/sysprep--generalize--a-windows-installation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I highly recommend a video by Craft Computing going over Windows Deployment Services if you are interested in this method - &lt;a href=&#34;https://youtu.be/PdKMiFKGQuc&#34;&gt;https://youtu.be/PdKMiFKGQuc&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;installing-windows-10-and-removing-components&#34;&gt;Installing Windows 10 and Removing Components&lt;/h2&gt;
&lt;p&gt;The Full AME Experience. Most people will NOT want to do this as it will remove functionality from Windows 10, that you CAN NOT put back in. Some of the components can be taken out in the Custom ISO phase, but this takes it to another level.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: I do NOT recommend this for MOST machines&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Components Removed&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows Update&lt;/li&gt;
&lt;li&gt;Windows Store&lt;/li&gt;
&lt;li&gt;Media Player Functions&lt;/li&gt;
&lt;li&gt;Telemetry&lt;/li&gt;
&lt;li&gt;Windows Activation (YOU MUST Activate Windows Before this Tweak!) &lt;em&gt;If you fail to do this, you will have a watermark you can&amp;rsquo;t get rid of&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;DirectX 12&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source files for Tweaks &lt;a href=&#34;https://ameliorated.info/&#34;&gt;https://ameliorated.info/&lt;/a&gt; or my GitHub mirror &lt;a href=&#34;https://github.com/ChrisTitusTech/windows-lite-2004&#34;&gt;https://github.com/ChrisTitusTech/windows-lite-2004&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2021/01-win10/ame.jpg&#34; alt=&#34;ame&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;installation-overview&#34;&gt;Installation Overview&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install Windows 10 (Stock or Custom ISO)&lt;/li&gt;
&lt;li&gt;Activate Windows 10 and Disconnect from Internet afterwards&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;amelioration_2004.bat&lt;/code&gt; as Admin and Pre-Amelioration&lt;/li&gt;
&lt;li&gt;Reboot to Linux (I recommend Linux Mint)&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;sudo ./ameliorate_2004.sh&lt;/code&gt; in Terminal on Live Linux USB&lt;/li&gt;
&lt;li&gt;Reboot back to Windows&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;amelioration_2004.bat&lt;/code&gt; as Admin and Post-Amelioration&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;driver-installation&#34;&gt;Driver Installation&lt;/h3&gt;
&lt;p&gt;Recommend using the Offline Snappy Driver Installer &lt;a href=&#34;https://sdi-tool.org/&#34;&gt;https://sdi-tool.org/&lt;/a&gt;. This is about 50 GB, but has every driver you need.&lt;/p&gt;
&lt;h3 id=&#34;ame-step-by-step-documentation&#34;&gt;AME Step-by-Step Documentation&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.ameliorated.info/doku.php?id=documentation_2004&#34;&gt;https://wiki.ameliorated.info/doku.php?id=documentation_2004&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;running-updates&#34;&gt;Running Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Download Latest Servicing Stack Update (&lt;em&gt;Check Month - Windows verison- Architecture x64&lt;/em&gt;) &lt;a href=&#34;https://www.catalog.update.microsoft.com/Search.aspx?q=Servicing%20Stack%20Update%20Windows%2010&#34;&gt;https://www.catalog.update.microsoft.com/Search.aspx?q=Servicing%20Stack%20Update%20Windows%2010&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download Cumulative Update (&lt;em&gt;Check Month/Version/Arch AND Run After rebooting above&lt;/em&gt;) &lt;a href=&#34;https://www.catalog.update.microsoft.com/Search.aspx?q=Cumulative%20Update%20Windows%2010&#34;&gt;https://www.catalog.update.microsoft.com/Search.aspx?q=Cumulative%20Update%20Windows%2010&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extract Updates&lt;br&gt;
&lt;code&gt;expand -F:* .\Windows10SSU.msu C:\Update1&lt;/code&gt;&lt;br&gt;
&lt;code&gt;dism /online /add-package /packagepath=C:\1\Windows10.0-SSU.cab&lt;/code&gt;&lt;br&gt;
Reboot&lt;br&gt;
&lt;code&gt;expand -F:* .\Windows10Cumulative.msu C:\Update2&lt;/code&gt;&lt;br&gt;
&lt;code&gt;dism /online /add-package /packagepath=C:\2\Windows10.0-Cumulative.cab&lt;/code&gt;&lt;br&gt;
Reboot and Run&lt;br&gt;
&lt;code&gt;dism /online /Cleanup-Image /StartComponentCleanup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: File Names change and will be different from above!&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;optimizing-windows-10-settings&#34;&gt;Optimizing Windows 10 Settings&lt;/h2&gt;
&lt;p&gt;To finish things off we do some custom tweaks with the Official CTT Windows 10 Toolbox. This is something I have been customizing for years and refining every single month to work on any Windows 10 Installation.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iex ((New-Object System.Net.WebClient).DownloadString(&amp;#39;https://git.io/JJ8R4&amp;#39;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;what-this-script-can-do&#34;&gt;What this script can do&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Installs Chocolatey, Notepad++, Irfanview, VLC, Java, and asks if you want Adobe Reader or Brave.&lt;/li&gt;
&lt;li&gt;Removes all Windows Store Apps EXCEPT office, xbox, and WSL.&lt;/li&gt;
&lt;li&gt;Removed Telemetry&lt;/li&gt;
&lt;li&gt;Disables Cortana&lt;/li&gt;
&lt;li&gt;Deletes various schedules tasks that rebloat the system&lt;/li&gt;
&lt;li&gt;Removes Other Bloatware (Candy Crush, etc.)&lt;/li&gt;
&lt;li&gt;Fixes problems that other scripts causes (lock screen and personalization options restricted)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Based on User feedback, this no longer uninstalls OneDrive or Office.&lt;/p&gt;
&lt;h3 id=&#34;toolbox-walkthrough-video&#34;&gt;Toolbox Walkthrough Video&lt;/h3&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/V27McA7ch6w&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;windows-services-to-disable&#34;&gt;Windows Services to Disable&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Windows Defender &amp;amp; Firewall&lt;/li&gt;
&lt;li&gt;Windows Mobile Hotspot Service&lt;/li&gt;
&lt;li&gt;Bluetooth Support Service&lt;/li&gt;
&lt;li&gt;Print Spooler (Required for Printing)&lt;/li&gt;
&lt;li&gt;Fax&lt;/li&gt;
&lt;li&gt;Remote Desktop Configuration and Remote Desktop Services&lt;/li&gt;
&lt;li&gt;Windows Insider Service&lt;/li&gt;
&lt;li&gt;Secondary Logon&lt;/li&gt;
&lt;li&gt;Downloaded Maps Manager&lt;/li&gt;
&lt;li&gt;Touch Keyboard and Handwriting Panel Service&lt;/li&gt;
&lt;li&gt;Offline Files&lt;/li&gt;
&lt;li&gt;Windows Connect Now&lt;/li&gt;
&lt;li&gt;Remote Registry&lt;/li&gt;
&lt;li&gt;Application Layer Gateway Service&lt;/li&gt;
&lt;li&gt;Smart Card&lt;/li&gt;
&lt;li&gt;Windows Image Acquisition&lt;/li&gt;
&lt;li&gt;Security Center&lt;/li&gt;
&lt;li&gt;Connected User Experiences and Telemetry&lt;/li&gt;
&lt;li&gt;Retail Demo Service&lt;/li&gt;
&lt;li&gt;Windows Media Player Network Sharing Service&lt;/li&gt;
&lt;li&gt;AllJoyn Router Service&lt;/li&gt;
&lt;li&gt;Geolocation Service&lt;/li&gt;
&lt;li&gt;Windows Biometric Service (Required for Fingerprint logon)&lt;/li&gt;
&lt;li&gt;Program Compatibility Assistant Service&lt;/li&gt;
&lt;li&gt;Enterprise App Management Service&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Common Computer Issues</title>
      <link>http://localhost:1313/common-computer-issues/</link>
      <pubDate>Fri, 28 Aug 2020 05:42:25 -0500</pubDate>
      
      <guid>http://localhost:1313/common-computer-issues/</guid>
      <description>&lt;p&gt;These are all the issues we discussed on a live stream. I took all the community questions and made this webpage for them.&lt;/p&gt;
&lt;h2 id=&#34;windows-10---automated-tasks&#34;&gt;Windows 10 - Automated Tasks&lt;/h2&gt;
&lt;p&gt;Q: How can I make a YouTube video sit there paused on someone&amp;rsquo;s screen in Windows 10 and instantly start playing aloud upon unlocking the screen/waking from sleep?&lt;/p&gt;
&lt;p&gt;A: Task Scheduler can do all sorts of tasks and you can set the triggers to be on login or at certain times of the day.&lt;/p&gt;
&lt;h2 id=&#34;linux---display-issues&#34;&gt;Linux - Display Issues&lt;/h2&gt;
&lt;p&gt;Solution for Display constantly resetting or getting incorrectly configured&lt;/p&gt;
&lt;p&gt;3 Solutions (All will work)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xorg Custom Settings
&lt;ul&gt;
&lt;li&gt;When display render is launched it will automatically configure each display to these specification from &lt;code&gt;/etc/X11/xorg.conf.d/10-monitor.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# /etc/X11/xorg.conf.d/10-monitor.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Section &amp;#34;Monitor&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### Monitor Identity - Typically HDMI-0 or DisplayPort-0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Identifier    &amp;#34;HDMI1&amp;#34; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Option        &amp;#34;PreferredMode&amp;#34; &amp;#34;1920x1080&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Option        &amp;#34;TargetRefresh&amp;#34; &amp;#34;60&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### Positioning the Monitor
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## Basic
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Option &amp;#34;LeftOf or RightOf or Above or Below&amp;#34; &amp;#34;DisplayPort-0&amp;#34;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## Advanced
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Option        &amp;#34;Position&amp;#34; &amp;#34;1680 0&amp;#34; #Note you can always set both to 0 0 to mirror
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## Disable a Monitor
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     Option        &amp;#34;Disable&amp;#34; &amp;#34;true&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;EndSection 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Autorandr - Automatic monitor settings
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phillipberndt/autorandr&#34;&gt;https://github.com/phillipberndt/autorandr&lt;/a&gt; - This automatically selects a display configuration based on connected devices&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Xrandr Script
&lt;ul&gt;
&lt;li&gt;Make a custom bash script and set with login manager, cron job, or set in &lt;code&gt;~/.xinitrc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sample xrandr script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;xrandr --output HDMI-1 --off --output HDMI-2 --auto
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: You can use the tool &lt;em&gt;arandr&lt;/em&gt; to grab the proper display script&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;windowslinuxmacos---flashing-images-to-sd-card-or-usb&#34;&gt;Windows/Linux/MacOS - Flashing Images to SD-Card or USB&lt;/h2&gt;
&lt;p&gt;There are so many solutions for this one:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows - Rufus (&lt;a href=&#34;https://rufus.ie&#34;&gt;https://rufus.ie&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Windows/Linux/Mac - Etcher (&lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;https://www.balena.io/etcher/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Linux/Mac - &lt;code&gt;dd&lt;/code&gt; terminal command
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dd if=~/Downloads/image.iso of=/dev/sdx bs=1M&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;if = input file/device | of= output file/device | bs= block size&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows - Win32 Disk Imager &lt;a href=&#34;https://sourceforge.net/projects/win32diskimager/&#34;&gt;https://sourceforge.net/projects/win32diskimager/&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;for images that aren&amp;rsquo;t working or using special media like sd cards&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux---boot-time-high-for-kde&#34;&gt;Linux - Boot Time High for KDE&lt;/h2&gt;
&lt;p&gt;Analyze systemd and figure out why&amp;hellip; (&lt;code&gt;systemd-analyze&lt;/code&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;systemd-analyze blame
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;             10.667s apt-daily.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              1.127s apt-daily-upgrade.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              1.053s dev-mapper-neon\x2d\x2dvg\x2droot.device
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               793ms lvm2-pvscan@8:3.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               622ms boot.mount
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               613ms snapd.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               267ms minidlna.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               217ms NetworkManager.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               200ms nvidia-persistenced.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               196ms upower.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               189ms systemd-logind.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: Also try &lt;code&gt;systemd-analyze critical-chain&lt;/code&gt; or &lt;code&gt;systemd-analyze plot &amp;gt; boot.svg&lt;/code&gt; as this shows the chain of the startup&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;linux---usb-port-stops-working&#34;&gt;Linux - USB Port stops working&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Check to see if device shows on &lt;code&gt;lsusb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check dmesg for errors &lt;code&gt;dmesg | grep -i USB&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;usb-devices&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Disable Auto Suspend
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat /sys/module/usbcore/parameters/autosuspend&lt;/code&gt; result should be &lt;code&gt;2&lt;/code&gt; which means enabled&lt;/li&gt;
&lt;li&gt;Modify Grub or bootloader to disable auto suspend (for grub modify &lt;code&gt;/etc/default/grub&lt;/code&gt;)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;quiet splash usbcore.autosuspend=-1&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo update-grub&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Verify by running cat command again&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux---fixing-no-display-drivers-or-black-screen-or-missing-desktop-environment&#34;&gt;Linux - Fixing No Display Drivers or Black Screen or Missing Desktop Environment&lt;/h2&gt;
&lt;p&gt;Ctrl + Alt + F1 or F2&lt;/p&gt;
&lt;p&gt;This drops you to TTY and no display drivers are needed. From this console you can fix things by installing display drivers or missing packages you need.&lt;/p&gt;
&lt;h2 id=&#34;all-computers---cant-get-into-bios&#34;&gt;All Computers - Can&amp;rsquo;t Get into BIOS&lt;/h2&gt;
&lt;p&gt;Open it up and remove the CMOS Battery. Press the power button without it plugged in to fully discharge. Then wait 60 seconds and put CMOS battery back in.&lt;/p&gt;
&lt;h2 id=&#34;general-pc-maintenance---updates--shuting-them-down&#34;&gt;General PC Maintenance - Updates &amp;amp; Shuting them down&lt;/h2&gt;
&lt;p&gt;Updates should be done weekly with security only one applied. Feature Updates should be delayed at least 1 year. This is universal across all operating systems. I also recommend shutting down your PC every day and not using suspend/hibernate. If you want to schedule the updates you can leave your PC once a week overnight.&lt;/p&gt;
&lt;h2 id=&#34;windowslinux---time-maintenance&#34;&gt;Windows/Linux - Time Maintenance&lt;/h2&gt;
&lt;p&gt;You should use UTC time everywhere. Windows uses local time and it is terrible. Change this with a registry setting&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disable Internet Time on Windows 10
&lt;ul&gt;
&lt;li&gt;Head to Settings &amp;gt; Time &amp;amp; language and disable “Set time automatically”.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Modify Windows Registry to use UTC
&lt;ul&gt;
&lt;li&gt;Start - Run - &lt;code&gt;regedit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\TimeZoneInformation&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create new DWORD (32-bit) Value &lt;code&gt;RealTimeIsUniversal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set Value to &lt;code&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You can also use REG files from this project &lt;a href=&#34;https://github.com/ChrisTitusTech/Windows-10-UTC&#34;&gt;https://github.com/ChrisTitusTech/Windows-10-UTC&lt;/a&gt; if you don&amp;rsquo;t want to manually edit registry&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;macos---opencore-and-safety&#34;&gt;MacOS - OpenCore and Safety&lt;/h2&gt;
&lt;p&gt;Opencore is a completely open project and is safe. Here is the github of OpenCore where they expose all their code for review &lt;a href=&#34;https://github.com/acidanthera/OpenCorePkg&#34;&gt;https://github.com/acidanthera/OpenCorePkg&lt;/a&gt; and the complete install guide is here &lt;a href=&#34;https://dortania.github.io/OpenCore-Install-Guide/&#34;&gt;https://dortania.github.io/OpenCore-Install-Guide/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;linux-battery-life-and-laptop-heat&#34;&gt;Linux Battery Life and Laptop Heat&lt;/h2&gt;
&lt;p&gt;There are a variety of packages you can use, but highly suggest two:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tlp&lt;/li&gt;
&lt;li&gt;xfce4-power-manager&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TLP will throttle your CPU and use less power and XFCE power manager will take care of brightness, suspend, and other power saving features as a standalone package even if you aren&amp;rsquo;t using XFCE as a desktop environment.&lt;/p&gt;
&lt;h2 id=&#34;macos---opencore-audio-issues&#34;&gt;MacOS - OpenCore Audio Issues&lt;/h2&gt;
&lt;p&gt;This typically comes from using two codecs or the wrong one. &lt;em&gt;Use ONLY ONE!&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AppleALC - &lt;a href=&#34;https://github.com/acidanthera/AppleALC&#34;&gt;https://github.com/acidanthera/AppleALC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VoodooHDA - &lt;a href=&#34;https://sourceforge.net/projects/voodoohda/&#34;&gt;https://sourceforge.net/projects/voodoohda/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux---app-wont-launch-it-just-disappears&#34;&gt;Linux - App won&amp;rsquo;t launch it just disappears&amp;hellip;&lt;/h2&gt;
&lt;p&gt;Run Application in Terminal and look at the errors. Chances are it is missing a dependency.&lt;/p&gt;
&lt;h2 id=&#34;windows---these-settings-are-managed-by-your-organization&#34;&gt;Windows - &amp;ldquo;these settings are managed by your organization&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;Chances are you ran a powershell script (maybe mine&amp;hellip;) and you are now locked out of changing the lock screen on your Windows Box. Run this command in powershell to gain control of your lock screen again:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Remove-ItemProperty -Path &amp;#34;HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization&amp;#34; -Name &amp;#34;NoLockScreen&amp;#34; -ErrorAction SilentlyContinue
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;OR&lt;/p&gt;
&lt;p&gt;You can also open up Start - Run - &lt;code&gt;gpedit.msc&lt;/code&gt; and then go to All Settings and look for enabled features and set them to &lt;em&gt;Not Configured&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;windows---reinstall-onedrive&#34;&gt;Windows - Reinstall OneDrive&lt;/h2&gt;
&lt;p&gt;Open Up PowerShell Admin (Right Click Start Button)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;%systemroot%\SysWOW64\OneDriveSetup.exe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Windows 10 Scripts</title>
      <link>http://localhost:1313/windows-10-scripts/</link>
      <pubDate>Fri, 14 Aug 2020 11:43:17 -0500</pubDate>
      
      <guid>http://localhost:1313/windows-10-scripts/</guid>
      <description>&lt;p&gt;Three Windows 10 Scripts&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/onecommand.png&#34; alt=&#34;OneCommand&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;regular-no-onedrive-indexing-and-defender&#34;&gt;Regular (No OneDrive, Indexing, and Defender)&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;powershell -nop -c &amp;#34;iex(New-Object Net.WebClient).DownloadString(&amp;#39;https://git.io/JJ8R4&amp;#39;)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;minimal-only-targets-bloatwaretelemetry&#34;&gt;Minimal (Only Targets Bloatware/Telemetry)&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;powershell -nop -c &amp;#34;iex(New-Object Net.WebClient).DownloadString(&amp;#39;https://git.io/JJ5qc&amp;#39;)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;ltsc-style-debloat&#34;&gt;LTSC Style Debloat&lt;/h2&gt;
&lt;p&gt;(&lt;em&gt;WARNING: WILL UNINSTALL LOTS OF STUFF&lt;/em&gt;)&lt;br&gt;
&lt;a href=&#34;https://raw.githubusercontent.com/ChrisTitusTech/win10script/master/ultra-ltsc.ps1&#34;&gt;https://raw.githubusercontent.com/ChrisTitusTech/win10script/master/ultra-ltsc.ps1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;video-walkthrough&#34;&gt;Video Walkthrough&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/2R28u7o9mls&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Ultimate Windows Setup Guide</title>
      <link>http://localhost:1313/ultimate-windows-setup-guide/</link>
      <pubDate>Mon, 27 Jul 2020 14:26:59 -0500</pubDate>
      
      <guid>http://localhost:1313/ultimate-windows-setup-guide/</guid>
      <description>&lt;p&gt;This guide will walk you through a fresh Windows installation and debloat the services, tasks, and apps that are running in the background.&lt;/p&gt;
&lt;h2 id=&#34;one-command-to-do-everything&#34;&gt;One Command to Do Everything&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/onecommand.png&#34; alt=&#34;OneCommand&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;powershell -nop -c &amp;#34;iex(New-Object Net.WebClient).DownloadString(&amp;#39;https://git.io/JJ8R4&amp;#39;)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;github-project-for-debloating-optimization-and-installing-programs&#34;&gt;GitHub Project for Debloating, Optimization, and Installing Programs&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/github.png&#34; alt=&#34;github&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ChrisTitusTech/win10script/tree/master&#34;&gt;https://github.com/ChrisTitusTech/win10script/tree/master&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project was using many of the aspects of other debloat scripts, but I combined system admin scripts with it that I use to configure workstations at businesses. I also added Chocolatey package manager to the script for easy program installations.&lt;/p&gt;
&lt;p&gt;The script will remove scheduled tasks, windows applications, install common applications (adobe reader, notepad++, java, and more), while also disabling services, and removing windows components like Cortana that are performance hogs.&lt;/p&gt;
&lt;h2 id=&#34;what-this-script-does&#34;&gt;What this script does&lt;/h2&gt;
&lt;h3 id=&#34;main-programs-and-tweaks&#34;&gt;Main Programs and Tweaks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Installs Chocolatey (Package Manager for Windows)&lt;/li&gt;
&lt;li&gt;Installs O&amp;amp;O Shutup 10 and Runs Recommended Settings&lt;/li&gt;
&lt;li&gt;Misc 3rd Party program installs (Adobe, 7-Zip, Notepad++, and Media Player Classic-HC)&lt;/li&gt;
&lt;li&gt;Removals all Bloatware in MS Store (Leaves Office, Snip Tool, Xbox and other Apps used for Gaming)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;privacy-tweaks&#34;&gt;Privacy Tweaks&lt;/h3&gt;
&lt;p&gt;Disabled Services and Tasks&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Telemetry&lt;/li&gt;
&lt;li&gt;Wifi Sense&lt;/li&gt;
&lt;li&gt;Smart Screen and Web Search&lt;/li&gt;
&lt;li&gt;App Suggestions and Activity History&lt;/li&gt;
&lt;li&gt;Location Tracking and Maps&lt;/li&gt;
&lt;li&gt;Feedback and Tailored Experiences&lt;/li&gt;
&lt;li&gt;Error Reporting&lt;/li&gt;
&lt;li&gt;Cortana&lt;/li&gt;
&lt;li&gt;Advertising ID.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;security-tweaks&#34;&gt;Security Tweaks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;UAC Set to Low&lt;/li&gt;
&lt;li&gt;Disable SMB version 1&lt;/li&gt;
&lt;li&gt;Set Network to Private&lt;/li&gt;
&lt;li&gt;Disable Controlled Folder Access&lt;/li&gt;
&lt;li&gt;Disable Microsoft Defender (Check customization if not using another AV)&lt;/li&gt;
&lt;li&gt;Disable Meltdown Flag (Big performance boost for Intel Users)&lt;/li&gt;
&lt;li&gt;Enables F8 Boot Menu&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;service-tweaks&#34;&gt;Service Tweaks&lt;/h3&gt;
&lt;p&gt;Services Disabled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Malware Removal Tool&lt;/li&gt;
&lt;li&gt;Driver Updates&lt;/li&gt;
&lt;li&gt;Home Groups&lt;/li&gt;
&lt;li&gt;Shared Experiences&lt;/li&gt;
&lt;li&gt;Remote Assistance&lt;/li&gt;
&lt;li&gt;Autoplay&lt;/li&gt;
&lt;li&gt;Storage Sense&lt;/li&gt;
&lt;li&gt;DeFragmentation&lt;/li&gt;
&lt;li&gt;Superfetch&lt;/li&gt;
&lt;li&gt;Indexing&lt;/li&gt;
&lt;li&gt;Hibernation&lt;/li&gt;
&lt;li&gt;Sleep Timeout&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ui-tweaks&#34;&gt;UI Tweaks&lt;/h3&gt;
&lt;p&gt;Windows 10&amp;rsquo;s user interface is a mess and has too many notifications. This removes the Action Center, LockScreen, Sticky Keys, Task View, Expands File Transfer details by default, Show all tray icons, and various other tweaks.&lt;/p&gt;
&lt;h3 id=&#34;application-tweaks&#34;&gt;Application Tweaks&lt;/h3&gt;
&lt;p&gt;This script will keep the core of Microsoft Office, but most other Microsoft products that are sideloaded are removed. OneDrive is a big one that some use, so if you want that functionality check the customization section. Most other features removed aren&amp;rsquo;t used, like Internet Explorer and Work Folders.&lt;/p&gt;
&lt;h2 id=&#34;customization&#34;&gt;Customization&lt;/h2&gt;
&lt;p&gt;I encourage people to fork this project and comment out things they don&amp;rsquo;t like! Here are a list of normal things people change:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uninstalling OneDrive (This is on in my script)&lt;/li&gt;
&lt;li&gt;Installing Adobe, Chocolatey, Notepad++, MPC-HC, and 7-Zip&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comment any thing you don&amp;rsquo;t want out&amp;hellip; Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;########## NOTE THE # SIGNS! These disable lines This example shows UACLow being set and Disabling SMB1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### Security Tweaks ###
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;SetUACLow&amp;#34;,                  # &amp;#34;SetUACHigh&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;DisableSMB1&amp;#34;,                # &amp;#34;EnableSMB1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;########## NOW LETS SWAP THESE VALUES AND ENABLE SMB1 and Set UAC to HIGH
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### Security Tweaks ###
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;SetUACHigh&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;EnableSMB1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;video-walkthrough&#34;&gt;Video Walkthrough&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Tfd7BXCo9Xk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This script will be great for most users out there without losing much if any functionality. I typically run this on every system I setup, but I encourage you to fork this project and make the customizations that you need. Anything is possible, and everything can be automated. Save yourself hours of time and learn how to use not only this script, but using PowerShell.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Create a Windows Service</title>
      <link>http://localhost:1313/create-windows-service/</link>
      <pubDate>Mon, 15 Jun 2020 23:33:56 -0500</pubDate>
      
      <guid>http://localhost:1313/create-windows-service/</guid>
      <description>&lt;p&gt;This article goes over how to create a windows service.&lt;/p&gt;
&lt;p&gt;I will be going over 3 different ways to create a windows service. Check the legend to skip to the method you&amp;rsquo;d like to use. They will be: PowerShell, 3rd Party Tool, and Windows Resource Kits.&lt;/p&gt;
&lt;h2 id=&#34;create-windows-service-with-powershell&#34;&gt;Create Windows Service with PowerShell&lt;/h2&gt;
&lt;p&gt;Microsoft Source Article with ALL Syntax - &lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/new-service?view=powershell-7&#34;&gt;Microsoft Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TestService Example:&lt;br&gt;
&lt;code&gt;New-Service -Name &amp;quot;TestService&amp;quot; -BinaryPathName &amp;quot;C:\WINDOWS\System32\svchost.exe -k netsvcs&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-windows-service-for-java-applications-with-winsw&#34;&gt;Create Windows Service for Java Applications with WinSW&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/winsw/winsw&#34;&gt;https://github.com/winsw/winsw&lt;/a&gt; is the project that is a fantastic wrapper for windows services.&lt;br&gt;
You will download this exe and rename it to your needs. It is configured by the included XML file under the same name.&lt;/p&gt;
&lt;h2 id=&#34;create-windows-service-with-nssm&#34;&gt;Create Windows Service with NSSM&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://nssm.cc&#34;&gt;http://nssm.cc&lt;/a&gt; is the official site for this 3rd party tool method.&lt;/p&gt;
&lt;p&gt;To show service installation GUI:&lt;br&gt;
&lt;code&gt;nssm install [&amp;lt;servicename&amp;gt;]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To install a service without confirmation:&lt;br&gt;
&lt;code&gt;nssm install &amp;lt;servicename&amp;gt; &amp;lt;app&amp;gt; [&amp;lt;args&amp;gt; ...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To show service editing GUI:&lt;br&gt;
&lt;code&gt;nssm edit &amp;lt;servicename&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To retrieve or edit service parameters directly:&lt;br&gt;
&lt;code&gt;nssm get &amp;lt;servicename&amp;gt; &amp;lt;parameter&amp;gt; [&amp;lt;subparameter&amp;gt;]&lt;/code&gt;&lt;br&gt;
&lt;code&gt;nssm set &amp;lt;servicename&amp;gt; &amp;lt;parameter&amp;gt; [&amp;lt;subparameter&amp;gt;] &amp;lt;value&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;nssm reset &amp;lt;servicename&amp;gt; &amp;lt;parameter&amp;gt; [&amp;lt;subparameter&amp;gt;]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To show service removal GUI:&lt;br&gt;
&lt;code&gt;nssm remove [&amp;lt;servicename&amp;gt;]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To remove a service without confirmation:&lt;br&gt;
&lt;code&gt;nssm remove &amp;lt;servicename&amp;gt; confirm&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-windows-service-with-windows-server-resource-kit-2003&#34;&gt;Create Windows Service with Windows Server Resource Kit 2003&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Download Windows Server Resource Kit &lt;a href=&#34;http://www.microsoft.com/downloads/details.aspx?FamilyID=9d467a69-57ff-4ae7-96ee-b18c4790cffd&amp;amp;DisplayLang=en&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run the executable to install the Resource Kit&lt;/li&gt;
&lt;li&gt;Open up a command prompt and run the following to install a service stub (default install location used in this example):&lt;/li&gt;
&lt;li&gt;You may substitute &amp;ldquo;EQBC Service&amp;rdquo; with whatever name you would like to give to the service for display purposes&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;C:\Program Files\Windows Resource Kits\Tools\instsrv.exe&amp;#34; &amp;#34;New Service&amp;#34; &amp;#34;C:\Program Files\Windows Resource Kits\Tools\srvany.exe&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Run regedit to edit the Windows registry, and navigate to the following registry key: &lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\New Service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;From the Edit menu, select New, select Key, and name the new key Parameters&lt;/li&gt;
&lt;li&gt;Highlight the Parameters key&lt;/li&gt;
&lt;li&gt;From the Edit menu, select New, select String Value, and name the new value Application&lt;/li&gt;
&lt;li&gt;From the Edit menu, select Modify, and type in the full path name and application name, including the drive letter and file extension.
&lt;em&gt;Example:&lt;/em&gt; &lt;code&gt;C:\MQ2\eqbcs.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Now go to Start and Run and type in &lt;code&gt;services.msc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;From here scroll down to New Service (or whatever name you gave the service above), right-click and select Properties&lt;/li&gt;
&lt;li&gt;On the General tab, change the Startup type to &lt;code&gt;Automatic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click the Start button to start your service&lt;/li&gt;
&lt;li&gt;Select the Recovery tab, and you have the option of changing the drop-down boxes for First-Failure and so on to Restart the service&lt;/li&gt;
&lt;li&gt;Select OK and you are finished&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Each one of these ways have their uses and I have used each method for different programs. It is great to learn to use all of the above examples or at least make yourself familiar with them.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Clean Up Windows 10</title>
      <link>http://localhost:1313/clean-up-windows-10/</link>
      <pubDate>Mon, 14 Oct 2019 20:08:01 +0000</pubDate>
      
      <guid>http://localhost:1313/clean-up-windows-10/</guid>
      <description>&lt;p&gt;In this article, we will clean up Windows 10. This will include debloat, startup maintenance, system tweaks, and privacy settings. These 3 stages are broken down below and will help maintain a healthy Windows 10 system. I’d recommend re-running these steps every 6 months.&lt;/p&gt;
&lt;h2 id=&#34;july-2021-update---ctt-official-debloat-launched&#34;&gt;July 2021 Update - CTT Official Debloat Launched&lt;/h2&gt;
&lt;p&gt;Check out the updated debloat and utility toolbox here: &lt;a href=&#34;https://christitus.com/debloat-windows-10-2020/&#34;&gt;https://christitus.com/debloat-windows-10-2020/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Old Content is below with an older method of debloating Windows 10.&lt;/p&gt;
&lt;h2 id=&#34;step-1-debloat-windows-10&#34;&gt;Step 1: Debloat Windows 10&lt;/h2&gt;
&lt;p&gt;We will be utilizing PowerShell to clean up Windows 10 and get rid of a bunch of useless bloat that is included with it.&lt;/p&gt;
&lt;h3 id=&#34;download-powershell-script&#34;&gt;Download PowerShell Script&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../../images/2019/10/Screenshot_20191014_144201.png&#34; alt=&#34;Screenshot_20191014_144201&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;run-powershell-script&#34;&gt;Run PowerShell Script&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;../../images/2019/10/runcmd.png&#34; alt=&#34;runcmd&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://git.io/debloat&#39;))&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: This will remove many apps in the Microsoft Store. Games, Office 365 and things that utilize the Microsoft Store. If unsure, use the customize blacklist and only tick the boxes of things you want to remove!&lt;/strong&gt;&lt;br&gt;
Source: &lt;a href=&#34;https://github.com/Sycnex/Windows10Debloater&#34;&gt;https://github.com/Sycnex/Windows10Debloater&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;step-2-clean-up-windows-10-startup&#34;&gt;Step 2: Clean Up Windows 10 Startup&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../../images/2019/10/taskmanager.png&#34; alt=&#34;taskmanager&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Launch Task Manager&lt;/strong&gt; and then click the startup tab. You need to disable any unneeded programs from here.&lt;/p&gt;
&lt;h3 id=&#34;changing-startup-programs-advanced-users&#34;&gt;Changing Startup Programs (Advanced Users)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../../images/2019/10/startup10.png&#34; alt=&#34;startup10&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can change startup programs from Start-Run-Type:&lt;code&gt;shell:startup&lt;/code&gt; and Start-Run-Type: &lt;code&gt;shell:common startup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can also modify startup programs using registry editor HKCU or &lt;code&gt;HKLM\Software\Microsoft\Windows\CurrrentVersion\Run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Cleanup &lt;strong&gt;Task Scheduler&lt;/strong&gt;, as it accumulates many things that cause an install to be slow and is vital when you clean up Windows 10.&lt;/p&gt;
&lt;h2 id=&#34;step-3-system-tweaks-and-privacy&#34;&gt;Step 3: System Tweaks and Privacy&lt;/h2&gt;
&lt;p&gt;There is literally hundreds of settings in Windows 10 that are privacy concerns and why I’d recommend using a 3rd party software for this. However, you can do all the same tweaks by simply going through settings and doing all these manually. That said, I recommend using O&amp;amp;O Shutup10 for optimal tweaks and privacy.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/2019/10/oo-shutup10.png&#34; alt=&#34;oo-shutup10&#34;&gt;&lt;/p&gt;
&lt;p&gt;Download: &lt;a href=&#34;https://www.oo-software.com/en/shutup10&#34;&gt;https://www.oo-software.com/en/shutup10&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also tell everyone to use the &lt;strong&gt;recommended settings&lt;/strong&gt; as the other settings can have unintended consequences.&lt;/p&gt;
&lt;h3 id=&#34;other-recommended-settings&#34;&gt;Other Recommended Settings&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Turn off Hibernation:&lt;/strong&gt; powercfg /hibernate off&lt;br&gt;
&lt;strong&gt;Modify Applications Menu:&lt;/strong&gt; explorer shell:AppsFolder&lt;br&gt;
&lt;strong&gt;Change Windows 10 Start Menu:&lt;/strong&gt; shell:StartMenuAllPrograms or shell:Start Menu&lt;/p&gt;
&lt;h2 id=&#34;video-walkthrough&#34;&gt;Video Walkthrough&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/mWHiP9K8fQ0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Installing Linux Subsystem for Windows 10</title>
      <link>http://localhost:1313/installing-linux-subsystem/</link>
      <pubDate>Tue, 11 Sep 2018 19:56:07 +0000</pubDate>
      
      <guid>http://localhost:1313/installing-linux-subsystem/</guid>
      <description>&lt;p&gt;The following video goes over installing Linux Subsystem on Windows 10. Most notably it allows you to run Linux terminal commands in Windows 10 without having a virtual machine or dual boot into a Linux operating system.&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/RriP3LmuKNA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;enable-linux-subsystem-feature&#34;&gt;Enable Linux Subsystem Feature&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;cd ~ Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux&lt;/code&gt;&lt;br&gt;
&lt;em&gt;Note: Perform in PowerShell&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;powershell-installation-method&#34;&gt;PowerShell Installation Method&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Invoke-WebRequest -Uri https://aka.ms/wsl-ubuntu-1604 -OutFile Ubuntu.appx -UseBasicParsing Rename-Item -Path ~/Ubuntu.appx -NewName Ubuntu.zip Expand-Archive ~/Ubuntu.zip ~/Ubuntu cd Ubuntu ./ubuntu.exe&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;microsoft-store-installation-method&#34;&gt;Microsoft Store Installation Method&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Open the Microsoft Store&lt;/li&gt;
&lt;li&gt;Browse to Ubuntu-1604 and subsequently click the Install button&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In Closing The Linux Subsystem is a welcomed addition to Windows 10 because most things that come from the Microsoft store are garbage. Above all using this will give you the ability to check out and compile many GitHub projects. It is now one of the first options I enable when I do fresh installs of Windows 10 due to the fact Linux is not practical all the time. Leave any Questions and Comments below and I’ll get back to you. I regularly publish on&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Debloat Windows 10</title>
      <link>http://localhost:1313/debloat-windows-10/</link>
      <pubDate>Sun, 09 Sep 2018 17:08:58 +0000</pubDate>
      
      <guid>http://localhost:1313/debloat-windows-10/</guid>
      <description>&lt;p&gt;Trying to Debloat Windows 10 is getting ridiculous and as a system admin it is soul crushing to see all that performance go to waste on the botched attempt by Microsoft to do an Appstore and its apps (I’m looking at you Candy Crush). Luckily some admins have worked tirelessly to give us a solution that works considerably well. Lets Start!&lt;/p&gt;
&lt;h2 id=&#34;october-2020-update&#34;&gt;October 2020 Update&lt;/h2&gt;
&lt;p&gt;If you are coming here from the YouTube video I have taken all the scripts below and a system admin script I used a lot in the past to make a streamlined debloat script. This script will optimize Windows and can be run multiple times if you have an update ruin all the optimizations. I have also made it very easy to launch. Here is the source files: &lt;a href=&#34;https://github.com/ChrisTitusTech/win10script&#34;&gt;https://github.com/ChrisTitusTech/win10script&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to just run this on any system, you can easily copy and paste this into a Admin Powershell prompt and watch it do everything for you. It does have two prompts based on user feedback. Let me know what you think below!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iex ((New-Object System.Net.WebClient).DownloadString(&amp;#39;https://git.io/JJ8R4&amp;#39;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What this script does&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Installs Chocolatey, Notepad++, Irfanview, VLC, Java, and asks if you want Adobe Reader or Brave.&lt;/li&gt;
&lt;li&gt;Removes all Windows Store Apps EXCEPT office, xbox, and WSL.&lt;/li&gt;
&lt;li&gt;Removed Telemetry&lt;/li&gt;
&lt;li&gt;Disables Cortana&lt;/li&gt;
&lt;li&gt;Deletes various schedules tasks that rebloat the system&lt;/li&gt;
&lt;li&gt;Removes Other Bloatware (Candy Crush, etc.)&lt;/li&gt;
&lt;li&gt;Fixes problems that other scripts causes (lock screen and personalization options restricted)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Based on User feedback, this no longer uninstalls OneDrive or Office.&lt;/p&gt;
&lt;h2 id=&#34;old-2018-instructions&#34;&gt;Old 2018 Instructions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Right Click Windows Button -&amp;gt;Select Powershell Prompt (Admin) OR Select Command Prompt (Admin)
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note: If you don’t have PowerShell and only command prompt open command prompt (admin) and type “&lt;em&gt;powershell&lt;/em&gt;“&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Change Execution policy to allow a debloat script to run in Powershell &lt;code&gt;Set-ExecutionPolicy Unrestricted&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run the script from the following Github Repository. The person running this GitHub has been updating this script for a while and is a godsend. (Source: &lt;a href=&#34;https://github.com/Sycnex/Windows10Debloater&#34;&gt;https://github.com/Sycnex/Windows10Debloater&lt;/a&gt;) Use Windows10Debloater.ps1from the location above
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;During installation select yes to debloat windows 10, select yes to remove OneDrive, and Yes to reboot after it finishes. Below is the image of performing these tasks.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[&lt;img src=&#34;http://localhost:1313/images/2018/09/debloatwin10cmd.png&#34; alt=&#34;debloatwin10cmd&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;video-walkthrough&#34;&gt;Video Walkthrough&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/q4ziE5Am0pM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Changing file permissions using PowerShell</title>
      <link>http://localhost:1313/changing-file-permissions/</link>
      <pubDate>Thu, 14 Jun 2018 15:46:23 +0000</pubDate>
      
      <guid>http://localhost:1313/changing-file-permissions/</guid>
      <description>&lt;p&gt;Use the following script for changing file permissions using PowerShell. I use this script when command line takeown and icacls fail. Obviously, run from an elevated PowerShell prompt or by typing ‘powershell’ from elevated cmd.&lt;/p&gt;
&lt;h2 id=&#34;the-script&#34;&gt;The Script&lt;/h2&gt;
&lt;p&gt;Change $folder to the base directory you want for changing permissions. &lt;br&gt;
&lt;em&gt;Please note, you can use network UNC paths for this or a simple C:.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$folder = &amp;#34;\\homeserver\users\&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$users = get-childitem $folder
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Foreach ($user in $users) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$acl = Get-Acl $user.FullName
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$acl.SetOwner([System.Security.Principal.NTAccount]&amp;#34;$user&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;set-acl $user.FullName $acl -Verbose
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$subFolders = Get-ChildItem $user.FullName -Directory -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Foreach ($subFolder in $subFolders) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$acl = Get-Acl $subFolder.FullName
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$acl.SetOwner([System.Security.Principal.NTAccount]&amp;#34;$user&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;set-acl $subFolder.FullName $acl -Verbose
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$subFiles = Get-ChildItem $user.FullName -File -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Foreach ($subFile in $subFiles) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$acl = Get-Acl $subFile.FullName
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$acl.SetOwner([System.Security.Principal.NTAccount]&amp;#34;$user&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;set-acl $subFile.FullName $acl -Verbose
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I’ve never had takeown fail on local disks, but I have found that I needed to resort to using a PowerShell script when doing this through a network location. It’s a very powerful script, however always be careful when running this. Be sure to always test this in a subdirectory first. This can be catastrophic for a company with millions of files and folder to reset the permission on, therefore be very careful!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exclude shared mailboxes from Dynamic Distribution Group</title>
      <link>http://localhost:1313/exclude-shared-mailboxes-exchange/</link>
      <pubDate>Mon, 31 Oct 2016 20:29:26 +0000</pubDate>
      
      <guid>http://localhost:1313/exclude-shared-mailboxes-exchange/</guid>
      <description>&lt;p&gt;This shows you how to exclude shared mailboxes from a Dynamic Distribution Group in Exchange Online. We will be using Powershell to make sure your shared mailboxes don’t get spam in them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/2016/10/exclude-shared-mailboxes.png&#34; alt=&#34;Exclude Shared Mailboxes&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;commands&#34;&gt;Commands&lt;/h3&gt;
&lt;h4 id=&#34;connect-to-o365-in-ps&#34;&gt;Connect to O365 in PS:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$UserCredential = Get-Credential
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri https://outlook.office365.com/powershell-liveid/ -Credential $UserCredential -Authentication Basic -AllowRedirection
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Import-PSSession $Session
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;exclude-shared-mailboxes-with-this-filter-command&#34;&gt;Exclude Shared Mailboxes with this filter command:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;set-DynamicDistributionGroup -Name &amp;quot;all@yourcompany.com&amp;quot;  -RecipientFilter {((RecipientType -eq &#39;UserMailbox&#39;) -and -not (RecipientTypeDetailsValue -eq &#39;SharedMailbox&#39;))}&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Afterward, Verify in Exchange Admin Console. You always want to prevent your shared mailboxes from getting spammed in a distribution group. Consequently, I’d highly recommend setting a requirement to send to-these dynamic mailboxes. This will prevent every employee from sending emails to everyone, which will be a bad thing.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Force active directory sync to Office 365 with Azure ADSync</title>
      <link>http://localhost:1313/force-active-directory-sync/</link>
      <pubDate>Fri, 07 Oct 2016 14:01:26 +0000</pubDate>
      
      <guid>http://localhost:1313/force-active-directory-sync/</guid>
      <description>&lt;p&gt;Use the following from an Elevated Powershell Prompt to force active directory sync to your O365 admin portal. You will be performing this on the server where Azure AD Sync is installed, however, when running this command you will need to wait 5 minutes before checking your portal to verify it is working. In larger environments, this can take a longer time.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Import-Module “C:\Program Files\Microsoft Azure AD Sync\Bin\ADSync\ADSync.psd1”
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Start-ADSyncSyncCycle -PolicyType Delta
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is great for forcing a sync of time-sensitive distribution list updates or user updates. If you find yourself doing this frequently make a PowerShell script for ease of access.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
