<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rocky Linux on Chris Titus Tech | Tech Content Creator</title>
    <link>http://localhost:1313/tags/rocky-linux/</link>
    <description>Recent content in Rocky Linux on Chris Titus Tech | Tech Content Creator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 May 2021 12:12:16 -0500</lastBuildDate><atom:link href="http://localhost:1313/tags/rocky-linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rocky Linux</title>
      <link>http://localhost:1313/rocky-linux/</link>
      <pubDate>Mon, 03 May 2021 12:12:16 -0500</pubDate>
      
      <guid>http://localhost:1313/rocky-linux/</guid>
      <description>&lt;p&gt;This guide goes over setting up KDE on Rocky Linux from a base server install with no GUI.&lt;/p&gt;
&lt;h2 id=&#34;download-and-install-server-setup&#34;&gt;Download and Install Server Setup&lt;/h2&gt;
&lt;p&gt;Download the Rocky Linux ISO from: &lt;a href=&#34;https://rockylinux.org/download/&#34;&gt;https://rockylinux.org/download/&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Note: I downloaded DVD 8GB, which is offline and no downloading&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;During Setup, I recommend a dedicated drive and choosing only SERVER with NO GUI!&lt;/p&gt;
&lt;p&gt;Go ahead and walkthrough the rest of the install&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;h3 id=&#34;enable-powertools-and-rpmfusion-repositories&#34;&gt;Enable PowerTools and RPMFusion Repositories&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf upgrade -y
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf install --nogpgcheck https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf install --nogpgcheck https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-8.noarch.rpm https://mirrors.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-8.noarch.rpm
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf config-manager --set-enabled PowerTools
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: If you can&amp;rsquo;t install PowerTools with config-manager, you can manually enable it through the repo file in &lt;code&gt;/etc/yum.repos.d&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf update -y
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf install xorg-x11-server-Xorg xorg-x11-xauth xorg-x11-apps -y
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf install plasma-desktop kscreen sddm kde-gtk-config dolphin konsole kate -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;set-graphical-interface-on-startup&#34;&gt;Set Graphical Interface on Startup&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl set-default graphical.target
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl enable sddm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: If using GTK Apps, I highly recommend building and installing &lt;code&gt;Kvantum&lt;/code&gt; from &lt;code&gt;git clone https://github.com/tsujan/Kvantum.git&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;nvidia-cards-only&#34;&gt;NVIDIA Cards ONLY&lt;/h4&gt;
&lt;p&gt;If you have an nvidia card it can be tricky to install so I recommend doing it before Xorg is started and you have a GUI.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First install Dev tools below with dkms and kernel-devel&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf groupinstall &amp;#34;Development Tools&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf install kernel-devel epel-release
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf install dkms
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Download NVIDIA Drivers from &lt;a href=&#34;https://www.nvidia.com/en-us/drivers/unix/&#34;&gt;https://www.nvidia.com/en-us/drivers/unix/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable nouveau by editing &lt;code&gt;/etc/default/grub&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GRUB_CMDLINE_LINUX=&amp;#34;crashkernel=auto rhgb quiet nouveau.modeset=0&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Write out the changes (Note Choose BIOS OR EFI&amp;hellip; NOT BOTH!)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BIOS:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo grub2-mkconfig -o /boot/grub2/grub.cfg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;EFI:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo grub2-mkconfig -o /boot/efi/EFI/rocky/grub.cfg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;(GUI Only) If you booted into KDE or GUI interface from TTY2 (Ctrl+Alt+F2) login and type &lt;code&gt;sudo systemctl isolate multi-user.target&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now Install NVIDIA and reboot &lt;code&gt;sudo bash NVIDIA-Linux-x86_64-*&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;setup-your-development-tools-for-builds&#34;&gt;Setup your Development Tools for Builds&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf groupinstall &amp;#34;Development Tools&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf install cmake gcc-c++ libX11-devel libXext-devel qt5-qtx11extras-devel qt5-qtbase-devel qt5-qtsvg-devel qt5-qttools-devel kf5-kwindowsystem-devel make procps-ng curl file git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Install Homebrew&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: Installer messed up and put it in &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; I moved this to my home folder and linked the brew executable to &lt;code&gt;~/bin&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Add Homebrew to the end bash or zsh rc file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;eval $(~/.linuxbrew/bin/brew shellenv)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;install-tools-of-your-choice&#34;&gt;Install Tools of your Choice&lt;/h3&gt;
&lt;p&gt;This is a base install so you will need a file explorer, terminal, browser, etc.&lt;/p&gt;
&lt;p&gt;Choose whatever you want!&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf install terminator firefox zsh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;vscodium-on-rocky-linux&#34;&gt;VSCodium on Rocky Linux&lt;/h4&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://github.com/VSCodium/vscodium&#34;&gt;https://github.com/VSCodium/vscodium&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo rpm --import https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/-/raw/master/pub.gpg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;printf &amp;#34;[gitlab.com_paulcarroty_vscodium_repo]\nname=gitlab.com_paulcarroty_vscodium_repo\nbaseurl=https://paulcarroty.gitlab.io/vscodium-deb-rpm-repo/rpms/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/-/raw/master/pub.gpg&amp;#34; |sudo tee -a /etc/yum.repos.d/vscodium.repo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf install codium
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;new-packages-with-appimage-or-flatpak&#34;&gt;New Packages with AppImage or Flatpak&lt;/h4&gt;
&lt;p&gt;Install flatpak with &lt;code&gt;sudo dnf install flatpak&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;See What package are availiable: &lt;a href=&#34;https://flathub.org/home&#34;&gt;https://flathub.org/home&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Install the flathub repo on Rocky Linux &lt;code&gt;flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;GIMP 2.10 &lt;code&gt;sudo flatpak install https://flathub.org/repo/appstream/org.gimp.GIMP.flatpakref&lt;/code&gt;&lt;br&gt;
Steam &lt;code&gt;sudo flatpak install flathub com.valvesoftware.Steam&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-rocky-difference&#34;&gt;The Rocky Difference&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Security by default&lt;/em&gt; - Be aware this uses Enforced SELinux and Firewalld on install. This means applications will more often than not be sandboxed and will block all incoming traffic&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Stability in mind&lt;/em&gt; Yes, the packages are old by default but it means they stable&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Productivity Machine&lt;/em&gt; No constant updates, it just works&amp;hellip;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
